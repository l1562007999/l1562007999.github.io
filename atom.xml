<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>绕 梁</title>
  
  <subtitle>余音绕梁-三日不绝</subtitle>
  <link href="http://l1562007999.github.io/atom.xml" rel="self"/>
  
  <link href="http://l1562007999.github.io/"/>
  <updated>2022-04-26T07:51:39.826Z</updated>
  <id>http://l1562007999.github.io/</id>
  
  <author>
    <name>梁珍发</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>I prioritized my research at the expense of my health—until I crashed</title>
    <link href="http://l1562007999.github.io/2022/04/26/I-prioritized-my-research-at-the-expense-of-my-health%E2%80%94until-I-crashed/"/>
    <id>http://l1562007999.github.io/2022/04/26/I-prioritized-my-research-at-the-expense-of-my-health%E2%80%94until-I-crashed/</id>
    <published>2022-04-26T01:57:20.000Z</published>
    <updated>2022-04-26T07:51:39.826Z</updated>
    
    <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍:"></a>介绍:</h2><p>有人早八晚十007成常态。</p><p>有课题组“卷”到飞起，博士5年发上8篇SCI才能毕业。</p><p>……</p><p>然而，疯狂工作，压榨自己的身体和生活，真的值得吗？</p><p>来自贝尔实验室的一位华人科学家<strong>Mingde Zheng</strong>，最近就在Science上发文，对此现象说了一个大大的“不”字。</p><p><img src="https://img.ithome.com/newsuploadfiles/2022/4/7666777a-c455-4ebb-bf29-c360f9dfa9f1.jpg"></p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>After drawing blood and running a CT scan, the doctor had questions for me. “What is a typical day like for you?” he inquired. “I am a graduate student with a packed schedule that usually keeps me at work late into the night,” I replied. Next, he turned to diet. I paused when this question came, embarrassed by my answer. “I only have coffee for breakfast. For lunch and dinner, I usually grab something from a fast-food vendor on campus.” The doctor seemed aghast(吃惊的,惊骇的). As more questions followed about my stress levels and lifestyle, my unhealthy state began to sink in.</p><p>在我抽完血和完成CT扫描之后, 医生问了我一些问题:”你的日常是怎样的?” 我回答:”我是名研究生, 日程排满, 通常需要熬到深夜”. 随后, 他提起了饮食问题. 我懵住了, 尴尬地回答:”早餐只喝咖啡. 午餐和晚餐的话, 通常就是校园里的自动售货机那儿买点东西. “ 医生惊了Σ(っ °Д °;)っ.  接下来,  医生问了更多关于我的压力程度与生活习惯方面的问题,  这让我的不健康状态实锤了.</p><p>It was easier to live a well-rounded(全面发展的) life and stay healthy when I was an undergraduate student. I had fewer responsibilities—succeeding in classes was the main priority. I lived in a dorm with resident assistants who advised us about our personal lives, showing us where to eat and exercise. The cafeteria served healthy food options. And I had a built-in group of friends through the dorm, which made it easy to participate in social activities.</p><p>上大学的时候, 我过着面面俱到的生活, 保持身体健康也更简单. 承担的压力不大, 主要认真上课就行. 我住的宿舍配备了生活辅导员, 他们会指导一下我们生活, 告诉我们到哪里吃饭, 到哪里锻炼. 而且校园餐厅有些菜品都挺健康. 宿舍内也交到了一群朋友, 所以参加社交活动方便很多.</p><p>That all changed in graduate school. I was laser focused(专注) on my dissertation project and doing what I could to become a successful scientist. I lived off campus, and I didn’t feel I had the time or energy to shop for groceries and cook. I stopped exercising and didn’t spend as much time socializing. My drive to succeed blinded me from seeing any potential problems with my lifestyle.</p><p>可是成为研究生之后, 一切都变了.  我一股脑地钻进论文项目里, 竭尽全力成为一名成功的科学家. 我住在校外, 而且感觉也没时间或精力去商店买东西, 去做饭. 我没有继续锻炼了, 也没有花太多时间社交. 我想要成功的渴望蒙蔽了我的双眼, 让我看不到我生活习惯中潜伏的毛病.  </p><p>Sometimes, I could feel that I was becoming sluggish(反应迟钝的). But instead of giving my mind and body a rest, I drank energy boosters to maintain my stamina and continued to work long hours. I became an abusive overlord(封建君主) of my body. But it could only take so much before it crashed and burned.</p><p>有时候, 我能感觉自己反应迟钝. 尽管如此, 我也没有停下来放松身心, 而是靠喝功能饮料来充能, 继续长时间地工作. 我开始透支我的身体了, 就这样透支着, 我的身体离垮掉也不远了.  </p><p>As I progressed through my Ph.D. program, I gained an unhealthy amount of weight. I got tired easily. Energy drinks no longer worked, and my body would react violently to them, with nausea, chills, and shakes. I often caught colds or the flu. And I started to have sporadic(零散的) abdominal pains, which I tried my best to ignore.</p><p>在我投入到我的博士项目过程中, 体重减轻了很多. 我容易感到疲劳. 充能饮料已经没用了, 喝完我会反应强烈, 会出现恶心, 打寒颤和颤抖的症状. 还有, 我开始时不时地感到腹痛, 但我会尽量忍着.</p><p>Eventually, the abdominal pains were so bad they drove me to the emergency room. That’s when the doctor peppered (一连串地(提问))me with questions. As my wife sat terrified by my side, he diagnosed me with a gastrointestinal disorder(肠胃失调) and told me <strong>in no uncertain terms</strong>(直接了当地,绝不含糊地) that I would need to change my lifestyle. No pill would fix my problem; in the long term, eating well, exercising, and trying to minimize stress would be the only way to keep the pain from recurring and turning into something worse.</p><p>果然, 有一次腹痛太猛了, 不得不去了急诊室. 就是这一次医生问了我一连串的健康问题. 我被诊断为肠胃失调, 医生明确告知我要改变生活习惯了. 我老婆当时在旁边陪着我,她很害怕. 医生还说吃药改善不了症状, 需要长期地锻炼, 尽量减少承担的压力, 只有这样才能防止疼痛复发, 病情恶化.</p><p>I worried that if I eased up on the gas pedal(汽车油门) at work, I wouldn’t be as productive. But after hearing the doctor’s warning, I knew I had no choice. I stopped working late into the night, which gave me more time to relax, sleep, and prepare my own meals. I read up on dietary recommendations and began to choose nutritious and healthy foods. I also gave up energy drinks and switched to tea.</p><p>虽然我担心如果在工作上放松的话, 成效将不如以前, 但听了医生一番话之后, 我想我没有选择的余地. 之后, 我停止了熬夜工作, 这样一来, 我就有时间放松放松, 睡个好觉, 自己做饭. 我看了一些饮食推荐, 开始吃营养丰富, 健康的食物. 同时, 我也不再喝功能饮料了, 改成了喝茶.   </p><p>Many times, I was tempted to go back to my old routine. I placed sticky notes in my office and at home to remind myself that if I didn’t make healthy choices, I’d suffer consequences. Over time, though, it became easier, especially once my habits became more ingrained and I began to notice positive changes in my life.</p><p>期间, 很多次, 我想走老路了. 但我会在办公室和家里贴便利贴来提醒自己, 如果打破现在的健康习惯, 我将会吃到苦头. 幸好随着时间的推移, 我越来越适应了这种生活方式, 尤其是我的很多习惯根深蒂固了, 并且我开始注意到我的生活有了明显的改善.  </p><p>It’s been 4 years now and, to my surprise, I have not only noticed gains in my health, I have also found it easier to be productive at work. I’m no longer plagued by stomach pains and constant fatigue. And I’m able to remain alert throughout the day without having to rely on energy boosters.</p><p>到现在已经4年了, 我惊喜地发现不仅收获到了健康, 而且同时外婆也发现工作也更加容易有成效. 再也胃痛的感觉与持续的疲乏感. 而且即便不喝功能饮料, 我也能全天保持警醒的状态.</p><p>My unhealthy lifestyle may not have been the root cause of my health issues—I may have become ill regardless. But I am thankful I had an early warning that I was neglecting my physical health. I’ve noticed many other scientists making similar mistakes, and I worry their <strong>wake-up call</strong> (警示)won’t come until later in life, when it will be harder to reverse the damage. Our work as scientists is important, but we can only do that work if we take care of our bodies.</p><p>我的生活习惯不健康可能并非引起我的健康问题的根源, 也许最终我无论如何都会生病. 但是我很庆幸我能在这么早就得到警示, 提醒我是在忽视我的身体健康.  我已经注意到其他科学家也正在犯同样的错误, 还有我担心他们的健康警示会出现得很晚, 到那时就很难恢复对身体造成的伤害了. 最为科学家, 我们的工作固然重要, 但是只有我们养好自己的身体, 才能更好的投入工作.</p><hr><p>来源: </p><p><a href="https://www.science.org/content/article/i-prioritized-my-research-expense-my-health-until-i-crashed">https://www.science.org/content/article/i-prioritized-my-research-expense-my-health-until-i-crashed</a></p><p><a href="https://mp.weixin.qq.com/s?__biz=MzIzNjc1NzUzMw==&amp;mid=2247619874&amp;idx=2&amp;sn=b0c1bd44692fcc06aaa9651c0dbdd86a&amp;chksm=e8d1a250dfa62b4672292fbf803b60912774bc5ff7941ebced8fc07bf4e1267bd2013ea62f77&amp;scene=178&amp;cur_album_id=1683168268632506370#rd">https://mp.weixin.qq.com/s?__biz=MzIzNjc1NzUzMw==&amp;mid=2247619874&amp;idx=2&amp;sn=b0c1bd44692fcc06aaa9651c0dbdd86a&amp;chksm=e8d1a250dfa62b4672292fbf803b60912774bc5ff7941ebced8fc07bf4e1267bd2013ea62f77&amp;scene=178&amp;cur_album_id=1683168268632506370#rd</a></p>]]></content>
    
    
    <summary type="html">牺牲健康来拼命搞研究---直到身体垮了</summary>
    
    
    
    <category term="翻译" scheme="http://l1562007999.github.io/categories/%E7%BF%BB%E8%AF%91/"/>
    
    <category term="EC" scheme="http://l1562007999.github.io/categories/%E7%BF%BB%E8%AF%91/EC/"/>
    
    
    <category term="翻译" scheme="http://l1562007999.github.io/tags/%E7%BF%BB%E8%AF%91/"/>
    
    <category term="健康" scheme="http://l1562007999.github.io/tags/%E5%81%A5%E5%BA%B7/"/>
    
  </entry>
  
  <entry>
    <title>媒体翻译-1</title>
    <link href="http://l1562007999.github.io/2022/04/26/%E5%AA%92%E4%BD%93%E7%BF%BB%E8%AF%91-1/"/>
    <id>http://l1562007999.github.io/2022/04/26/%E5%AA%92%E4%BD%93%E7%BF%BB%E8%AF%91-1/</id>
    <published>2022-04-26T00:50:03.000Z</published>
    <updated>2022-04-26T01:28:51.608Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>中文热词通常反映社会变化和文化，有些在外国媒体上愈来愈流行。例如，土豪(tuhao)和大妈(dama)都是老词，但是已获取了新的意义。 </p></blockquote><p>The Chinese heated(buzz&#x2F;hit) words usually reflect social changes and culture, some of which are increasingly popular with foreign media. Tuhao and dama, for example, are both old words, but they get different meanings now。</p><blockquote><p>土豪以前指欺压 佃户和仆人的乡村地主，现在用于指花钱如流水或者喜欢炫耀财富的人，也就是说，土豪有钱，但没有品位。</p></blockquote><p>The word tuhao used to mean rural landlords who oppress their tenants and servants, while now it refers to people spending money without limits or those showing off all around. That is to say, tuhao owns money rather than taste. </p><blockquote><p>大妈是对中年妇女的称呼，但现在特指不久前金价下跌时大量购买黄精的中国妇女。 </p></blockquote><p>The word dama <u>is used to describe middle-aged women</u>(was meant for middle-aged women ). However, it is <strong>now</strong> regarded as a special word to call those Chinese women who rushed to purchase gold when the gold price decreased sharply not long ago。</p><blockquote><p>土豪和大妈可能会被人收入新版牛津(Oxford)英语词典，至今已有约120个中文词被加进了牛津英语词典，成为了英语语言的一部分。</p></blockquote><p>Tuhao and dama may be included in the new Oxford dictionary. Up to now, about 120 Chinese words have been listed in it and became part of the English language.</p><p>&#x2F;img&#x2F;QQ图片20200410075817.png</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;中文热词通常反映社会变化和文化，有些在外国媒体上愈来愈流行。例如，土豪(tuhao)和大妈(dama)都是老词，但是已获取了新的意义。 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The Chinese heated(buzz&amp;#x2F;hit) </summary>
      
    
    
    
    <category term="翻译" scheme="http://l1562007999.github.io/categories/%E7%BF%BB%E8%AF%91/"/>
    
    <category term="CE" scheme="http://l1562007999.github.io/categories/%E7%BF%BB%E8%AF%91/CE/"/>
    
    
    <category term="媒体翻译" scheme="http://l1562007999.github.io/tags/%E5%AA%92%E4%BD%93%E7%BF%BB%E8%AF%91/"/>
    
  </entry>
  
  <entry>
    <title>模拟试题-1</title>
    <link href="http://l1562007999.github.io/2022/04/23/%E6%A8%A1%E6%8B%9F%E8%AF%95%E9%A2%98-1/"/>
    <id>http://l1562007999.github.io/2022/04/23/%E6%A8%A1%E6%8B%9F%E8%AF%95%E9%A2%98-1/</id>
    <published>2022-04-23T01:58:30.000Z</published>
    <updated>2022-04-23T04:08:24.412Z</updated>
    
    <content type="html"><![CDATA[<h1 id="词汇"><a href="#词汇" class="headerlink" title="词汇"></a>词汇</h1><blockquote><p>在某物方面缺少信心</p></blockquote><p>lack confidence in sth</p><blockquote><p>only that</p></blockquote><p>I would have gone to the lecture with you <mark>only that<mark> I was so busy.</p><p>这里的only that 理解为 “要不是”</p><blockquote><p>Many happy returns. </p></blockquote><p>长命百岁, 常用作生日贺词</p><blockquote><p>在…条件之下</p></blockquote><p><mark>on<mark> the conditions of…</p><blockquote><p>It must ____  be kept in a closed container.</p></blockquote><p>可以填 therefore</p><blockquote><p>in the case of sth</p></blockquote><p>在… 的情况下</p><blockquote><p><mark>take<mark>  a quite different approach….</p></blockquote><p>采取…的方式 </p><blockquote><p>句子: The combination of temperature and pressure ___ which the densities become equal is called the critical point. </p></blockquote><p>填 at</p><blockquote><p>supporting</p></blockquote><p>支持的 配套的</p><blockquote><p> 同时地</p></blockquote><p>synchronically</p><ol><li>The synchronic closure system can solve this problem.<br>使用同步闭合系统解决了这个问题。</li></ol><blockquote><p>change &#x3D;&#x3D; alternation</p></blockquote><blockquote><p>adult cell </p></blockquote><p>成体细胞</p><blockquote><p>primate</p></blockquote><p>灵长类动物</p><blockquote><p>达成共识</p></blockquote><p>accept</p><p>or   accepted </p><blockquote><p>妇女地位</p></blockquote><p>Women’s status</p><blockquote><p>在…方面有机会</p></blockquote><p>in access to 比如说 医疗:  health care</p><blockquote><p>人权组织</p></blockquote><p>human rights communities</p><h1 id="改错"><a href="#改错" class="headerlink" title="改错"></a>改错</h1><p>改错类型</p><p>必有一句没有错误</p><p>谓语的时态语态 </p><p>关联词的修改</p><p>词的形式导致的语义错误或者逻辑错误</p><p>借此缺失</p><h1 id="作文"><a href="#作文" class="headerlink" title="作文"></a>作文</h1><p>As is shown in the table&#x2F;chart&#x2F;pie chart&#x2F;…..</p><p>In the light of the table….</p><p>To begin with, …..</p><p>In addition, …..</p><p>cause an increase rate of 12 percent….</p><blockquote><p>merit</p></blockquote><p>作动词: 应得的, 值得的  相当于deserve</p><blockquote><p>trendsetters</p></blockquote><p>开创新潮流的人  这里指明星</p>]]></content>
    
    
    <summary type="html">待补充的概览</summary>
    
    
    
    <category term="英语学习" scheme="http://l1562007999.github.io/categories/%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="试卷" scheme="http://l1562007999.github.io/categories/%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0/%E8%AF%95%E5%8D%B7/"/>
    
    
    <category term="学习" scheme="http://l1562007999.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="总结" scheme="http://l1562007999.github.io/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="笔记本" scheme="http://l1562007999.github.io/tags/%E7%AC%94%E8%AE%B0%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title>Imagination-Shawn Mendes</title>
    <link href="http://l1562007999.github.io/2022/04/22/Imagination-Shawn-Mendes/"/>
    <id>http://l1562007999.github.io/2022/04/22/Imagination-Shawn-Mendes/</id>
    <published>2022-04-22T02:11:32.000Z</published>
    <updated>2022-04-22T03:08:02.570Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Imagination"><a href="#Imagination" class="headerlink" title="Imagination"></a>Imagination</h1><h3 id="Shawn-Mendes"><a href="#Shawn-Mendes" class="headerlink" title="Shawn Mendes"></a><a href="https://www.lyrics.com/artist/Shawn-Mendes/2979091">Shawn Mendes</a></h3><p>不需要的翻译, 因为我懂英语啦</p>    <div id="aplayer-TbtDMnfV" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="31421331" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="true" data-mutex="true" data-listmaxheight="340px" data-preload=",metadata" data-theme="#dd001b"    ></div><p>Oh, there she goes again<br>Every morning it’s the same<br>You walk on by my house<br>I wanna call out your name</p><p>I wanna tell you how beautiful you are from where I’m standing<br>You got me thinking what we could because</p><p>I keep craving, craving, you don’t know it but it’s true<br>Can’t get my mouth to say the words they want to say to you<br>This is typical of love<br><mark><strong>Can’t wait anymore, I won’t wait</strong><br><strong>I need to tell you how I feel when I see us together forever</strong><mark></p><p>In my dreams you’re with me<br>We’ll be everything I want us to be<br>And from there, who knows, maybe this will be the night that we kiss for the first time<br>Or is that just me and my imagination</p><hr><p>We walk, we laugh, we spend our time walking by the ocean side<br>Our hands are gently intertwined<br>A feeling I just can’t describe<br>All this time we spent alone, thinking we could not belong to something so damn beautiful<br>So damn beautiful</p><hr><p>I keep craving, craving, you don’t know it, but it’s true<br>Can’t get my mouth to say the words they want to say to you<br>This is typical of love<br>Can’t wait anymore, I won’t wait<br>I need to tell you how I feel when I see us together forever</p><hr><p>In my dreams, you’re with me<br>We’ll be everything I want us to be<br>And from there, who knows, maybe this will be the night<br>That we kiss for the first time<br>Or is that just me and my imagination</p><p>Imagination<br>Imagination<br>(Whoa, whoa, whoa)</p><hr><p>In my dreams, you’re with me<br>We’ll be everything I want us to be<br>And from there, who knows, maybe this will be the night<br>That we kiss for the first time<br>Or is that just me and my imagination</p><p>I keep craving, craving, you don’t know it, but it’s true<br>Can’t get my mouth to say the words they want to say to you</p>]]></content>
    
    
    <summary type="html">一首歌的歌词</summary>
    
    
    
    <category term="歌曲" scheme="http://l1562007999.github.io/categories/%E6%AD%8C%E6%9B%B2/"/>
    
    <category term="歌词" scheme="http://l1562007999.github.io/categories/%E6%AD%8C%E6%9B%B2/%E6%AD%8C%E8%AF%8D/"/>
    
    
    <category term="歌词" scheme="http://l1562007999.github.io/tags/%E6%AD%8C%E8%AF%8D/"/>
    
    <category term="英文歌曲" scheme="http://l1562007999.github.io/tags/%E8%8B%B1%E6%96%87%E6%AD%8C%E6%9B%B2/"/>
    
  </entry>
  
  <entry>
    <title>ACM-《程序员延寿指南》</title>
    <link href="http://l1562007999.github.io/2022/04/22/ACM-%E3%80%8A%E7%A8%8B%E5%BA%8F%E5%91%98%E5%BB%B6%E5%AF%BF%E6%8C%87%E5%8D%97%E3%80%8B/"/>
    <id>http://l1562007999.github.io/2022/04/22/ACM-%E3%80%8A%E7%A8%8B%E5%BA%8F%E5%91%98%E5%BB%B6%E5%AF%BF%E6%8C%87%E5%8D%97%E3%80%8B/</id>
    <published>2022-04-22T01:51:27.000Z</published>
    <updated>2022-04-22T03:08:56.275Z</updated>
    
    <content type="html"><![CDATA[<p>截取部分学到的内容</p><p>文章来自: <a href="https://www.ithome.com/0/614/212.htm">https://www.ithome.com/0/614/212.htm</a></p><p>GitHub 项目地址：<a href="https://github.com/geekan/HowToLiveLonger">https://github.com/geekan/HowToLiveLonger</a></p><h2 id="程序员，该如何延寿？"><a href="#程序员，该如何延寿？" class="headerlink" title="程序员，该如何延寿？"></a>程序员，该如何延寿？</h2><p>纵观这个项目，其所围绕的一个关键词是 ——ACM。但并不是你以为的那个 ACM，它的全称是 All-Cause Mortality，中文叫做全因死亡率。（连关键词都挺程序员味道的）</p><h2 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h2><p>这项为期八年的研究表明，如果每天平均每天增加至少半份红肉摄入，那么 ACM 将增加 10%。而每周吃两份红肉或加工肉类（不包括禽或鱼类），则 ACM 会增加 3%。</p><hr><p>当然，除了红白肉的分析之外，项目作者也列举了其它人们平时会摄入的食物，对 ACM 的影响分析。总结来说便是：</p><ul><li>吃白肉：ACM 可降低 3%-11%</li><li>蔬果为主 ACM 可降低 17%-26%</li><li>多吃辣：ACM 可降低 23%</li><li>多吃坚果：ACM 可降低 4%-17%</li><li>少吃蛋黄：若每天吃 0.5 颗，ACM 会增加 7%</li><li>中量碳水、多吃植物蛋白：ACM 可降低 10%</li></ul><hr><p>除了“吃的”之外，平时我们“喝的”也会对 ACM 产生影响：</p><p>喝咖啡（-12%<del>-22% ACM）、喝牛奶（-10%</del>-17% ACM）、喝茶（-8%~15% ACM）、少喝或不喝甜味饮料（否则每天一杯 + 7% ACM，+ 多巴胺）、戒酒或每周 100g（纯酒精量 (g)&#x3D; 饮酒量 (ml)× 酒精浓度）。</p><hr><p>吸烟会让 ACM 增加 50%，寿命平均缩短 11 至 12 年。</p><p>除此之外，像多晒太阳可以降低 40% 的 ACM。</p><p>而药物方面，例如二甲双胍可以让糖尿病人可以平均多活 3 年、复合维生素可以患癌风险降低 8%，亚精胺和葡萄糖胺分别可以降低 ACM30%-60% 和 39%。</p><h2 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h2><p>类比上述的输入，这里的输出指的便是程序员们在体外的一些活动了。例如运动方面，根据《柳叶刀》一项 120 万人参与的研究，仅是 挥拍运动，若是每周能保持 3 次，每次 45-60 分钟，便可以让 ACM 降低 47%。还有程序员们得好好刷牙，这样会让 ACM 降低 25%！</p><p>除此之外，睡觉也是降低 ACM 的重要因素。例如 JAMA Network Open 的一项研究，便指出了每晚的睡眠时长与全因死亡率的关联。具体而言，每天睡 7 小时全因死亡率最低。若是在 22-24 点间睡觉最好，早睡和晚睡会分别增加 43% 和 15% 的 ACM。</p><h2 id="Context"><a href="#Context" class="headerlink" title="Context"></a><strong>Context</strong></h2><p>就像一段代码有了外部变量，这段代码便无法独立运行。程序员们的健康也是如此，ACM 会受到外部环境的影响。例如研究表明，悲观情绪会与 ACM 有所关联（虽然乐观情绪并不会起到保护作用）。甚至贫富差距、减肥都与 ACM 息息相关。</p><p>当然，还有近几年全球爆发的新冠疫情，Nature 子刊的一项研究表明：（美国）新冠死亡率达到了 1.5% 左右，人均预期寿命减少了 2 年。</p><p><img src="https://img.ithome.com/newsuploadfiles/2022/4/d4138004-7232-4fde-8b22-530c6b9b2153.png"></p><blockquote><blockquote><p>所有文献表明的更多是相关而非因果。</p></blockquote></blockquote>]]></content>
    
    
    <summary type="html">跟着程序员搞养生，最高能多活 20 年？！就在最近，一个名为《程序员延寿指南》的项目在 GitHub 上大受欢迎，几天狂揽 5.5k 颗星星。</summary>
    
    
    
    <category term="前端" scheme="http://l1562007999.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="科普" scheme="http://l1562007999.github.io/categories/%E5%89%8D%E7%AB%AF/%E7%A7%91%E6%99%AE/"/>
    
    
    <category term="编程" scheme="http://l1562007999.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="软文" scheme="http://l1562007999.github.io/tags/%E8%BD%AF%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>翻译练习-CE-3</title>
    <link href="http://l1562007999.github.io/2022/04/19/%E7%BF%BB%E8%AF%91%E7%BB%83%E4%B9%A0-CE-3/"/>
    <id>http://l1562007999.github.io/2022/04/19/%E7%BF%BB%E8%AF%91%E7%BB%83%E4%B9%A0-CE-3/</id>
    <published>2022-04-19T02:23:35.000Z</published>
    <updated>2022-04-23T04:09:31.954Z</updated>
    
    <content type="html"><![CDATA[<p><strong>建议时间：****60-70分钟</strong></p><p><strong>难点：****意群切分、重复措辞化简、文化概念</strong></p><h1 id="原文"><a href="#原文" class="headerlink" title="原文"></a>原文</h1><p>中华文明是亚洲文明的重要组成部分。自古以来，中华文明在继承创新中不断发展，在应时处变中不断升华，积淀着中华民族最深沉的精神追求，是中华民族生生不息、发展壮大的丰厚滋养。中国的造纸术、火药、印刷术、指南针、天文历法、哲学思想、民本理念等在世界上影响深远，有力推动了人类文明发展进程。</p><p>中华文明是在同其他文明不断交流互鉴中形成的开放体系。从历史上的佛教东传、“伊儒会通”，到近代以来的“西学东渐”、新文化运动、马克思主义和社会主义思想传入中国，再到改革开放以来全方位对外开放，中华文明始终在兼收并蓄中历久弥新。亲仁善邻、协和万邦是中华文明一贯的处世之道，惠民利民、安民富民是中华文明鲜明的价值导向，革故鼎新、与时俱进是中华文明永恒的精神气质，道法自然、天人合一是中华文明内在的生存理念。</p><p>今日之中国，不仅是中国之中国，而且是亚洲之中国、世界之中国。未来之中国，必将以更加开放的姿态拥抱世界、以更有活力的文明成就贡献世界。</p><h1 id="翻译中"><a href="#翻译中" class="headerlink" title="翻译中"></a>翻译中</h1><h2 id="第一段"><a href="#第一段" class="headerlink" title="第一段"></a>第一段</h2><p>中华文明是亚洲文明的重要组成部分。</p><p>自古以来，中华文明在继承创新中不断发展，在应时处变中不断升华，积淀着中华民族最深沉的精神追求，是中华民族生生不息、发展壮大的丰厚滋养。</p><p>中国的造纸术、火药、印刷术、指南针、天文历法、哲学思想、民本理念等在世界上影响深远，有力推动了人类文明发展进程。</p><p>Chinese civilization is an essential part of Asian civilization.</p><p>From ancient time, it has been continuously developing through succession and innovation, evolving by adapting to the trend of times and changes, and accumulating the earnest spiritual inspiration. Thanks to these virtues,  Chinese civilization can be of durability and lasting development.</p><p>China’s technologies and arts, such as paper-making, gunpowder, printing, astronomy and lunar calender, philosophical ideas and people-centered principle, has forcefully pushed forward the progress of human civilization.</p><h2 id="第二段"><a href="#第二段" class="headerlink" title="第二段"></a>第二段</h2><p>中华文明是在同其他文明不断交流互鉴中形成的开放体系。</p><p>从历史上的佛教东传、“伊儒会通”，到近代以来的“西学东渐”、新文化运动、马克思主义和社会主义思想传入中国，再到改革开放以来全方位对外开放，中华文明始终在兼收并蓄中历久弥新。</p><p>亲仁善邻、协和万邦是中华文明一贯的处世之道，惠民利民、安民富民是中华文明鲜明的价值导向，革故鼎新、与时俱进是中华文明永恒的精神气质，道法自然、天人合一是中华文明内在的生存理念。</p><p>Chinese civilization is an open system forged by exchanges with and mutual learning from other civilizations. </p><p>From XuanZang’s pilgrim for Buddhism, and Confucianism-Islam exchanges, to in modern time,  conversion of Western learning,  New Culture movement, learning of Maxism and Communism,  and to China’s reform and opening up,  this civilization  is always thriving in an eclectic way.   </p><p>For such civilization,  keeping a friendly neighborhood and harmonious relationships with other nations are the way it deals with the world; Benefiting its people and securing them a prolific livelihood are its distinguished value orientation;  pursuing innovation and advancing with time are its eternal spirit; obeying nature’s law and uniting of human and nature are its philosophy of survival.  </p><p>伊儒会通: 是伊斯兰文化与儒家文化交流、沟通与融合等</p><p>历久弥新: 指经历长久的时间而更加鲜活，更加有活力，更显价值。或者是指一样东西不因时间而变旧，变腐，反而更加有活力，更显价值，比新的还要好。</p><h2 id="第三段"><a href="#第三段" class="headerlink" title="第三段"></a>第三段</h2><p>今日之中国，不仅是中国之中国，而且是亚洲之中国、世界之中国。未来之中国，必将以更加开放的姿态拥抱世界、以更有活力的文明成就贡献世界。</p><p>China of toady, is not only about herself, but also significant to Asian and even to the world.  China of the future will definitely embrace the world with an more open mind and infuse more energy into the world.</p>]]></content>
    
    
    <summary type="html">待补充的概览</summary>
    
    
    
    <category term="一级分类" scheme="http://l1562007999.github.io/categories/%E4%B8%80%E7%BA%A7%E5%88%86%E7%B1%BB/"/>
    
    <category term="二级分类" scheme="http://l1562007999.github.io/categories/%E4%B8%80%E7%BA%A7%E5%88%86%E7%B1%BB/%E4%BA%8C%E7%BA%A7%E5%88%86%E7%B1%BB/"/>
    
    
    <category term="1" scheme="http://l1562007999.github.io/tags/1/"/>
    
    <category term="2" scheme="http://l1562007999.github.io/tags/2/"/>
    
  </entry>
  
  <entry>
    <title>2021-初</title>
    <link href="http://l1562007999.github.io/2022/04/17/2021-%E5%88%9D/"/>
    <id>http://l1562007999.github.io/2022/04/17/2021-%E5%88%9D/</id>
    <published>2022-04-17T08:51:11.000Z</published>
    <updated>2022-04-23T12:17:28.215Z</updated>
    
    <content type="html"><![CDATA[<h1 id="词汇与语法"><a href="#词汇与语法" class="headerlink" title="词汇与语法"></a>词汇与语法</h1><blockquote><p>thought</p></blockquote><p>抽象名词 不可数</p><p>所以  a rational thought  中  不要加 a</p><blockquote><p>seize</p></blockquote><p>British police seized all the items in an operation that March.</p><blockquote><p>注意 historic 与historical的区别</p></blockquote><p>rical  表示 有历史意义的</p><p>ric 表示 历史的  历史事实相关之类的</p><h1 id="翻译"><a href="#翻译" class="headerlink" title="翻译"></a>翻译</h1><blockquote><p>地道的享受</p></blockquote><p>a real treat</p><h1 id="改错"><a href="#改错" class="headerlink" title="改错"></a>改错</h1><blockquote><p>for this occasion（开头）</p></blockquote><p>for 改为 on  </p><p>on this occasion  这一次</p><p>eg. </p><p>Well, sadly, on this occasion it was not a correct guess.<br>好吧，很遗憾，这次没猜对。</p><blockquote><p>we were driving alone.</p></blockquote><p>alone 改为  alone   这里并不是“we” 与 “alone” 相矛盾</p><p>along： 向前  going forward 向前</p><ul><li><p>I was driving along, thinking about Chris.</p><p>我一边开车，一边想着克里斯。</p></li><li><p>a group of children walking along in a line</p></li></ul><p>  排着队向前走的一群孩子</p><blockquote><p>It was pretty scary, and we were lucky and none of us got hurt.</p></blockquote><p>and 改为 but   后面的lucky 与前面的scary 形成语义转折关系</p><blockquote><p>It was so frightening that I will never forget.</p></blockquote><p>forget 后面加一个it  因为 that 前面不做形式宾语  不然 forget what？？？</p><h1 id="作文"><a href="#作文" class="headerlink" title="作文"></a>作文</h1><p>Never forget the hard lives before, because only with the inspiration of these memories can we go farther in the ever-changeable future.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;词汇与语法&quot;&gt;&lt;a href=&quot;#词汇与语法&quot; class=&quot;headerlink&quot; title=&quot;词汇与语法&quot;&gt;&lt;/a&gt;词汇与语法&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;thought&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;抽象名词 不可数&lt;/p&gt;
&lt;p&gt;</summary>
      
    
    
    
    <category term="英语学习" scheme="http://l1562007999.github.io/categories/%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="试卷" scheme="http://l1562007999.github.io/categories/%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0/%E8%AF%95%E5%8D%B7/"/>
    
    
    <category term="学习" scheme="http://l1562007999.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="总结" scheme="http://l1562007999.github.io/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="笔记本" scheme="http://l1562007999.github.io/tags/%E7%AC%94%E8%AE%B0%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title>翻译练习-2</title>
    <link href="http://l1562007999.github.io/2022/04/17/%E7%BF%BB%E8%AF%91%E7%BB%83%E4%B9%A0-2/"/>
    <id>http://l1562007999.github.io/2022/04/17/%E7%BF%BB%E8%AF%91%E7%BB%83%E4%B9%A0-2/</id>
    <published>2022-04-17T06:36:48.000Z</published>
    <updated>2022-04-19T01:35:05.005Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.loli.net/2022/04/19/2UnqpBhFwGjc8lZ.png" alt="微信图片_20220419093043.png"></p><p>2009年《时代》杂志将一款在三所纽约市公立学校试点的在线数学程序誉为是该年度50项最佳创新之一。</p><p>这款软件每天能为学生生成个性化的数学学习“列表”，然后学生可以凭自己的意愿选择学习模式——<del>软件上学习</del>软件教学，虚拟老师<del>教学</del>或者是<del>实体老师</del>真人教学。其独特的算法能分门别类地将各位老师的专长和课程安排与学生的需求相匹配。一位<del>兽医</del>资深教师夸赞道：“这款软件不仅能<del>自动</del>生成课程，发布测验，还能批改测验。”</p><p>尽管该程序只能略微提升学生的数学成绩（收效甚微），并且采用的这款程序的纽约市学校也不多（没有<del>声称</del><strong>预计</strong>的50所），但是它是安德里亚·加博尔在其《教育战争之后》一书中的<del>提到</del><strong>勾勒</strong>的突出实例化。三十多年来，企业慈善家，教育技术企业<del>家</del>和公共教育官员<del>进行了似乎不可能的联合</del>破天荒地达成统一战线，引领学校改革，<strong>但是</strong>这场改革<del>具有对技术的高估，标准化的测验，降低学生和社区的价值的特点</del>高估了技术和标准化考试的作用，贬低了教师和社区的价值。</p><p>modality： 形式、形态</p><p>sort： 分类</p><p>veteran instructor： 资深教师</p><p>slate： 预定；计划；安排</p><ul><li>例如 计划房子的拆除</li><li>the houses were first slated for demolition five years ago.</li></ul><p>chart： 动词 绘制 制定</p><ul><li><p>书中绘制地藏宝地图</p><p>the charted map for hunting treasure</p></li></ul><p>spearhead： 动词   带领，带头，</p><p>a brand of ： 一连串， 一系列…</p><p>devalue： 贬低…的价值</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>在这篇翻译练习中，要注意的点：</p><ol><li>单词的意思把握不到位： slate， modality，spearhead，sort，chart，veteran instructor</li><li>a flesh-and-blood one 真人</li><li>注意不要随意增词,例如 这款软件不仅能<del>自动</del>生成课程</li><li>an unlikely coalition 破天荒的统一战线</li><li>a brand of school reform 一股教改浪潮</li><li>谁知道 characterized 这里 竟然是转折关系…</li></ol>]]></content>
    
    
    <summary type="html">待补充的概览</summary>
    
    
    
    <category term="翻译" scheme="http://l1562007999.github.io/categories/%E7%BF%BB%E8%AF%91/"/>
    
    <category term="EC" scheme="http://l1562007999.github.io/categories/%E7%BF%BB%E8%AF%91/EC/"/>
    
    
    <category term="翻译" scheme="http://l1562007999.github.io/tags/%E7%BF%BB%E8%AF%91/"/>
    
    <category term="外刊" scheme="http://l1562007999.github.io/tags/%E5%A4%96%E5%88%8A/"/>
    
  </entry>
  
  <entry>
    <title>翻译练习-1</title>
    <link href="http://l1562007999.github.io/2022/04/16/%E7%BF%BB%E8%AF%91%E7%BB%83%E4%B9%A0-1/"/>
    <id>http://l1562007999.github.io/2022/04/16/%E7%BF%BB%E8%AF%91%E7%BB%83%E4%B9%A0-1/</id>
    <published>2022-04-16T12:10:40.000Z</published>
    <updated>2022-04-19T01:22:09.845Z</updated>
    
    <content type="html"><![CDATA[<p>原文链接： <a href="https://mp.weixin.qq.com/s/mw2-DH96iC5996FEHVBd6Q">https://mp.weixin.qq.com/s/mw2-DH96iC5996FEHVBd6Q</a></p><h1 id="第一段"><a href="#第一段" class="headerlink" title="第一段"></a>第一段</h1><blockquote><p><code>就业</code>是最大的民生，事关经济发展和社会稳定<code>大局</code>。当前我国经济发展面临<code>需求收缩</code>、供给冲击、预期转弱<strong>三重压力</strong>，加之新冠肺炎<strong>疫情</strong><del>因素</del>，使得<code>市场</code>用人需求存在不确定性。此外，<strong>结构性就业</strong><code>矛盾</code>尚未得到<strong>根本缓解</strong>（原因 as a result）， “就业难”与“招人难”并存的<del>现象</del><strong>仍然存在</strong>（结果）。</p></blockquote><h2 id="我的译文"><a href="#我的译文" class="headerlink" title="我的译文"></a>我的译文</h2><p>Employment, the most important livelihood, is crutial to economic development and social stability. </p><p>For now（At present）, our economic development faces huge pressure from demand shrinking, <del>imbalance of supply and demand</del><code>supply shocks</code>, and <del>lower expectation</del> <code>weakening expectation</code>,(可以断句) </p><p><strong>M</strong>oreover with the impact of +<strong><code>the</code></strong>+COVID-19 epidemic, all togrther <del>bringing</del> bring out (or lead to) uncertainty（add another veil） on <del>hiring and employment</del> <code>labor market</code>. </p><p>In addition(Aside from that), <del>contradiction</del>as a result of fundamentally unresolved   structural issues in the market <del>has yet not (not yet) been  alleviated(relieved)</del>, <del>leaving problems on both hiring and working process</del>， many job seekers aren’t able to secure a job while companies complain they can’t find enough workers。      </p><h2 id="指点"><a href="#指点" class="headerlink" title="指点"></a>指点</h2><ul><li>最大的民生（问题）： the biggest livelihood issue</li><li><code>大局</code> 可以可以翻译成 overall picture 或者不翻译</li><li>第一句话注意两个分句之间的逻辑关系</li><li><code>需求紧缩</code>&#x3D;&#x3D;需求减少： demand contraction&#x2F;shirinking</li><li>供给冲击： supply shocks</li><li><code>（社会性/结构性）矛盾</code>: 矛盾 都是指问题 统一翻译成 problem或者issue</li><li><code>市场</code>: 指的是劳工市场， labor market</li><li>结构性就业矛盾： 市场里面的结构性问题  structural issues in the market</li><li>“就业难”与“招人难”并存: 注意这里怎么翻译： many job seekers aren’t able to secure a job while companies complain they can’t find enough workers</li><li><strong>国内的疫情用epidemic。国际的用pandemic</strong></li></ul><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>Employment is the most important livelihood issue and relates to economic development and social stability. At present, our economy faces triple pressures from demand contraction, supply shocks and weakening expectations. These factors, coupled with the covid-19 epidemic, have led to the uncertainty of demand in the labor market. Meanwhile, as a result of fundamentally unresolved structural issues in the market, many job seekers aren’t able to secure a job while companies complain they can’t find enough workers.</p><h1 id="第二段"><a href="#第二段" class="headerlink" title="第二段"></a>第二段</h1><blockquote><p>与此同时，2022年高校毕业生规模预计达1076万人，（断句）就业形势依然<code>严峻复杂</code>，但机遇与挑战并存。作为全球第二大经济体，我国拥有庞大的<strong>国内</strong>市场和<code>完备</code>的<code>产业体系</code>，就业<code>空间广</code>、<code>潜力足</code>。随着经济结构不断优化，一系列新职业<del>不断</del>涌现，为<code>新增劳动力</code>创造<code>更大的就业天地</code>。</p></blockquote><p>At the same time, it is estimated that in 2022 there will be 10.76 million +<strong>college</strong>+graduates. Although（Despite） it continues to add challenges to job seekers, opportunities come along with it. As the second <strong>largest</strong> economy in the world, China has a giant <strong>domestic</strong> market and equipped with a sound（full-fledged） industrial system(structure)， which provide a wide range of jobs <del>as well as</del> <strong>and</strong> developing potentials. As we insist on optimizing our economic structure, a series of professions are emerging <del>and create</del> ，<strong>creating</strong> mountainous opportunities（a larger job market ） for <strong>new</strong> workforce.</p><h2 id="指点-1"><a href="#指点-1" class="headerlink" title="指点"></a>指点</h2><ul><li>就业形式依然严峻：employment situation is severe&#x2F;grave and complicated</li><li>产业体系： industrial stucture</li><li>完备的：full-fledged </li><li>就业空间广， 潜力足： 就业 有 很多机会和十足的潜力   &#x3D;&gt; present ample opportunities for and strong potential of job creation.</li><li>新增劳动力：new entrants（新职员，新成员） into the labor market</li><li>更大的就业天地： 更多的职业岗位 more posts</li></ul><h2 id="参考-1"><a href="#参考-1" class="headerlink" title="参考"></a>参考</h2><p>In 2022, college graduates in China are expected to be 10.76 million. Despite the grave and complicated employment situation, there are opportunities as well as challenges. As the second largest economy in the world, we have a massive domestic market and a full-fledged industrial system, which presents ample opportunities for and strong potential of job creation. Thanks to an increasingly modernized economic structure, a wide range of new occupations are emerging in large numbers, offering greater space for new entrants into the labor market. </p><h1 id="第三段"><a href="#第三段" class="headerlink" title="第三段"></a>第三段</h1><blockquote><p>近年来，<code>各地各部门</code>持续优化营商环境(1)，取得很大成效(2  是1的结果)。但是，<code>针对</code> <code>企业</code>反映强烈的<code>痛点堵点</code> <code>问题</code>，（增加主语 we or it is important that）仍需<del>持续</del>缩减<code>市场准入负面清单</code>，在<code>政府权力做“减法”</code>、监管力度做“加法”、优化服务做“乘法”上<strong>下功夫</strong>，使创新创造创业氛围更加浓厚。</p></blockquote><p>In recent years, <del>local governments and departments</del><strong>authorities across the country</strong> have achieved a lot on the optimization of bussiness environment. However, in order to slove those tricky problems ( that some <del>enterprises</del>firms have appealed) of firms(companies), we still need to shorten the negative list <del>of market permission</del> <strong>for foreign investment</strong>. By <del>weakening government power</del>streamlining administration, stengthening <del>supervision</del><strong>regulation</strong> and improving public services, we will <del>make</del>build a more suitable&#x2F;enabling environment&#x2F;climate for innovation, <del>production</del>invention&#x2F;creativity and business startups.</p><h2 id="指点-2"><a href="#指点-2" class="headerlink" title="指点"></a>指点</h2><ul><li>各地各部门： authorities at all levels across the country</li><li>营商环境： business climate&#x2F;environment</li><li>（结果）取得很大成效： 结果用介词引导  with notable&#x2F;great success</li><li>针对…问题： 面对这些问题 或者说是  为了解决这些问题</li><li>企业： 单独出现的时候 处理成 firms or companies</li><li><code>痛点堵点</code> <code>问题</code>： 面临的一些严峻问题  bottlenecks and pain points</li><li>市场准入负面清单： the negative list for foreign investment  &#x2F;&#x2F;&#x2F; the negative list for market access</li><li>政府权力做“减法”: 固定表达 streamline administration(政府管理)</li><li>加强管理： 这里的管理 翻译成 enhance regulation（尤指通过规章进行的管理） 而不是 supervision</li><li>创新创造创业： 其中 创造 应该翻译为invention&#x2F;creativity   创业: entrepreneurship</li><li>优化服务： improve or upgrade public services</li></ul><h2 id="参考-2"><a href="#参考-2" class="headerlink" title="参考"></a>参考</h2><p>Over recent years, authorities at all levels across the country have worked to improve the business environment, with notable success. <strong>In light of bottlenecks and pain points that severely inhibit the growth of companies</strong>, however, much remains to be done to reduce the negative list for market access, streamline administration, enhance regulation, and upgrade public services, so as to create a more enabling environment for innovation, invention and entrepreneurship. </p><h1 id="第四段"><a href="#第四段" class="headerlink" title="第四段"></a>第四段</h1><blockquote><p>我国有9亿<code>劳动年龄人口</code>（1 是事实），兼具人口红利和人才红利（2  是1的结果）。随着我国进入<code>高质量发展阶段</code>，挖掘（培养&#x2F;塑造&#x2F;扩大）人才红利是关键。2019年，劳动年龄人口<code>平均受教育年限</code>达10.7年，（断句）应对日趋激烈的国际竞争、培育我国经济<del>发展</del>新优势，都需要加速<code>人力资本</code>积累，<del>主动</del>塑造人才红利。为此，我们要继续<strong>围绕</strong>(表示目的)提高<code>劳动就业人口</code> <code>平均受教育年限</code>，完善（modernize）义务教育制度，加大职业教育投入。</p></blockquote><p>With a number of 900 million of workforce, China has advanteges on demograhic dividend and talent dividend<del>population and talents dividend</del>. As we are entering in a high-quality developing stage, <del>digging</del> <del>out</del> expanding more talent dividend is the key. </p><p>In 2019, the average years of schooling of the working-age pupulation reached 10.7. </p><p>For gaining positions in drastic international competition and forstering new strengths for economic development, we need to accelerate <del>workforce</del>  accumulation of human capital and promptly <del>create talents dividend</del>expand talent pools. </p><p>Thus , <del>we should continue to add more efforts on the average education span of the working population, compulsory education system and vocational education.</del>  we should continue to improve(mordernize) the compulsory education system and increase investment on vocational education so as to increase the average years of schooling of the working-age population.</p><h2 id="指点-3"><a href="#指点-3" class="headerlink" title="指点"></a>指点</h2><ul><li>劳动年龄人口： the working-age population———With the working-age population of 900 million, …..</li><li>兼具： have &#x2F; be home to &#x2F;</li><li>人口红利：demographic dividend</li><li>人才红利： talent dividen（广）     有时候指 human resources </li><li>高质量发展阶段： a stage of high-quality development</li><li>平均受教育年限：the average years of schooling</li><li>经济发展新优势： new economic advantages</li><li>为应对…: in response to </li><li>日趋激烈的国际竞争：  ever-intense international competition</li><li>人力资本：human capital</li><li>劳动就业人口： 劳动人口 the working&#x2F;employed population</li><li>加大…投入： increase investment</li></ul><h2 id="参考-3"><a href="#参考-3" class="headerlink" title="参考"></a>参考</h2><p>With a working-age population of 900 million, we profit from massive demographic dividend and talent dividend. In fact, expanding talent dividend holds the key to success as our country has entered a stage of high-quality development. In 2019, the average years of schooling of the working-age population was 10.7. To respond to the ever-intense international competition and foster new economic advantages, it is important to facilitate the accumulation of human capital and expand talent pools. <strong>It means that</strong> we need to increase the average years of schooling of the working population by modernizing the compulsory education system and increasing investment in vocational education. </p><h1 id="全文译文"><a href="#全文译文" class="headerlink" title="全文译文"></a>全文译文</h1><p>Employment is the most important livelihood issue and relates to economic development and social stability. At present, our economy faces triple pressures from demand contraction, supply shocks and weakening expectations. These factors, coupled with the covid-19 epidemic, have led to the uncertainty of demand in the labor market. Meanwhile, as a result of fundamentally unresolved structural issues in the market, many job seekers aren’t able to secure a job while companies complain they can’t find enough workers.</p><p>In 2022, college graduates in China are expected to be 10.76 million. Despite the grave and complicated employment situation, there are opportunities as well as challenges. As the second largest economy in the world, we have a massive domestic market and a full-fledged industrial system, which presents ample opportunities for and strong potential of job creation. Thanks to an increasingly modernized economic structure, a wide range of new occupations are emerging in large numbers, offering greater space for new entrants into the labor market. </p><p>Over recent years, authorities at all levels across the country have worked to improve the business environment, with notable success. In light of bottlenecks and pain points that severely inhibit the growth of companies, however, much remains to be done to reduce the negative list for market access, streamline administration, enhance regulation, and upgrade public services, so as to create a more enabling environment for innovation, invention and entrepreneurship. </p><p>With a working-age population of 900 million, we profit from massive demographic dividend and talent dividend. In fact, expanding talent dividend holds the key to success as our country has entered a stage of high-quality development. In 2019, the average years of schooling of the working-age population was 10.7. To respond to the ever-intense international competition and foster new economic advantages, it is important to facilitate the accumulation of human capital and expand talent pools. It means that we need to increase the average years of schooling of the working population by modernizing the compulsory education system and increasing investment in vocational education. </p><h2 id="“人才红利”"><a href="#“人才红利”" class="headerlink" title="“人才红利”"></a>“人才红利”</h2><p>狭义：大学毕业生对城市的经济贡献</p><p>广义：国民受教育程度对社会的经济贡献。</p><p>此处可选择广义理解的角度，即可使用talent dividend。</p>]]></content>
    
    
    <summary type="html">就业是最大的民生，事关经济发展和社会稳定大局</summary>
    
    
    
    <category term="翻译" scheme="http://l1562007999.github.io/categories/%E7%BF%BB%E8%AF%91/"/>
    
    <category term="CE" scheme="http://l1562007999.github.io/categories/%E7%BF%BB%E8%AF%91/CE/"/>
    
    
    <category term="翻译" scheme="http://l1562007999.github.io/tags/%E7%BF%BB%E8%AF%91/"/>
    
    <category term="政经文" scheme="http://l1562007999.github.io/tags/%E6%94%BF%E7%BB%8F%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>2020-初</title>
    <link href="http://l1562007999.github.io/2022/04/15/2020-%E5%88%9D/"/>
    <id>http://l1562007999.github.io/2022/04/15/2020-%E5%88%9D/</id>
    <published>2022-04-15T12:42:54.000Z</published>
    <updated>2022-04-17T08:57:58.923Z</updated>
    
    <content type="html"><![CDATA[<h1 id="语法与词汇"><a href="#语法与词汇" class="headerlink" title="语法与词汇"></a>语法与词汇</h1><blockquote><p>实际的（需要考虑的）因素</p></blockquote><p>practical consideration</p><blockquote><p>in the names of sth</p></blockquote><p>以…命名</p><p>书中的人物名称都是以街道的名字来命名的.</p><p>The names in the books have been commemorated in the names of streets.</p><blockquote><p> get-together</p></blockquote><p>联欢会</p><blockquote><p>break up</p></blockquote><p>解散</p><blockquote><p>by the day</p></blockquote><p>按天数算</p><blockquote><p>journeyman</p></blockquote><p>短工; 计日工</p><blockquote><p>还记得”暑假”怎么说吗?</p></blockquote><p>summer vacation</p><blockquote><p>关于  in opposite directions</p></blockquote><p>这里的direction 一定要加s</p><blockquote><p>to make sure sth</p></blockquote><p>比如可以用在  “确保某人能胜任某项工作”</p><blockquote><p>努力说服学生将来能从事科学与技术方面的事业</p></blockquote><p>to persuade schoolchildren to take up career in science and technology</p><hr><p>在做阅读理解中的填空题时, 应该注意还原原文部分单词的完整性</p><p>比如原文是 If you’re interested in seeing wildlife I recommended travelling in the <code> more remote</code> areas of the country </p><p>题目是: lots of wildlife in ___ areas.  我填的是 <code>remote</code>  而答案是<code>more remote</code>   </p><p>所以要与原文的表述一致</p><hr><h1 id="改错"><a href="#改错" class="headerlink" title="改错"></a>改错</h1><p>改10个 错6个  TMD!!!</p><ol><li><code>the School Association which meet every two weeks for a...</code>  这里的meet 错了  要改为meets</li><li><code>and I asked about pumpking soup...</code>  这里的about 要改为 <code>for</code>   因为 这里的正确理解是我提出要求要什么东西 . 正确的表达式  ask for sth.   PS: 这么简单的都错了 呜呜呜</li><li><code>soup following by a choice of meat or fish and three vegetables</code> 这里的following 要改成<code>followed</code> . 因为 这里是用 被动 表示伴随状语  有 by 作提醒词</li><li><code>we were offered with salad and dessert</code> 因为<code>offer sb sth</code>  被动就是 <code>sb be offered sth </code> 不要加with啦 固定搭配</li><li><code>..that there was nobody can help me</code> 注意时态一致  这里的can 应该改成could 过去式</li><li><code>The person took my booking said that...</code> 这里的took my book 修饰 The person. 改正的话, 应该是 person后面加who  或者是 将took 改为 taking</li></ol><hr><h1 id="翻译"><a href="#翻译" class="headerlink" title="翻译"></a>翻译</h1><blockquote><p>我们最好的自己</p></blockquote><p>the best version of ourselves</p><blockquote><p>美图应用</p></blockquote><p>photo editing app</p><blockquote><p>分析</p></blockquote><p>动词: analyze</p><p>名词: analysis</p><p>动词ed: analyzed</p><p>动名词: analyzing</p><blockquote><p>在美颜相机里面</p></blockquote><p>这里需要转译</p><p>理解为 在 “美颜图片”里面:  in filtered photos </p><h1 id="作文"><a href="#作文" class="headerlink" title="作文"></a>作文</h1><h2 id="作文1"><a href="#作文1" class="headerlink" title="作文1"></a>作文1</h2><p>是为所展示动物写一篇简介(Write your entry for the competition)</p><h2 id="作文2"><a href="#作文2" class="headerlink" title="作文2"></a>作文2</h2><p>说说未来的房子是怎样的  还要说出现在的房子有什么不足</p><p>范文:</p><blockquote><p>第一段: 引出主题</p></blockquote><p>很难想象未来的房子回事怎样的  因为现在科技发展很快</p><blockquote><p>第二段: 指出现在的房子不足之处  然后提出改进</p></blockquote><p>有人来拜访 招待客人不方便, 比如找多余的拖鞋 准备美味的事物. 所以在未来 要有机器人来接待客人</p><p>点几下按钮  机器人清洁房屋</p><p>房子的墙壁 由特殊材料支撑 一年四季 恒温  不用收到天气变化的影响</p><p>声控家里的设备 手机控制  不用离开椅子</p><blockquote><p>第三段: 再次与当前的房子对比 指出未来房子的最大不同</p></blockquote><p>未来的房子 全自动化(highly-automated)</p><p>不用担心情节与空间规划问题</p><p>不用担心老人独居问题</p>]]></content>
    
    
    <summary type="html">一点总结</summary>
    
    
    
    <category term="英语学习" scheme="http://l1562007999.github.io/categories/%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="试卷" scheme="http://l1562007999.github.io/categories/%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0/%E8%AF%95%E5%8D%B7/"/>
    
    
    <category term="学习" scheme="http://l1562007999.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="总结" scheme="http://l1562007999.github.io/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="笔记本" scheme="http://l1562007999.github.io/tags/%E7%AC%94%E8%AE%B0%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title>2018-初</title>
    <link href="http://l1562007999.github.io/2022/04/11/2018-%E5%88%9D/"/>
    <id>http://l1562007999.github.io/2022/04/11/2018-%E5%88%9D/</id>
    <published>2022-04-11T12:13:22.000Z</published>
    <updated>2022-04-17T08:58:02.260Z</updated>
    
    <content type="html"><![CDATA[<h1 id="听力"><a href="#听力" class="headerlink" title="听力"></a>听力</h1><blockquote><p>occpupants<br>居住者 住户</p></blockquote><h1 id="Vocabular-amp-Grammar"><a href="#Vocabular-amp-Grammar" class="headerlink" title="Vocabular &amp; Grammar"></a>Vocabular &amp; Grammar</h1><blockquote><p>It’s high time… that  谓语动词的过去式 &#x2F; should+动词原形  </p></blockquote><blockquote><p>The most versatile <mark>are<mark> embryonic stem cells, which…..</p></blockquote><p>这里的are 是根据后面的真正的主语是复数而选出来的   所以谓语是什么形态 总是查看那个是真正的主语的单复数就行了, 不管是在前面 还是在后面</p><h1 id="Cloze"><a href="#Cloze" class="headerlink" title="Cloze"></a>Cloze</h1><blockquote><p>电话联系人: telephone contact</p></blockquote><h1 id="Translation"><a href="#Translation" class="headerlink" title="Translation"></a>Translation</h1><blockquote><p>whatever</p></blockquote><p>无论..   要翻译出来</p><blockquote><p>strive for</p></blockquote><p>努力追求…</p><blockquote><p>文化汇聚</p></blockquote><p>cultural merging</p><blockquote><p>从中国飞到地球另一端的美国, …..</p></blockquote><p>When flying from China to America, the other end of the earth, …..</p><p>这里使用同位语来处理 ‘美国’ 这个词的状语</p><blockquote><p>历史经验</p></blockquote><p>historical experiences</p><h1 id="Erro-Correction"><a href="#Erro-Correction" class="headerlink" title="Erro Correction"></a>Erro Correction</h1><blockquote><p>I decided that entire family would have</p></blockquote><p>这里的 entire 前面要加 the  因为是整个  是唯一的</p><h1 id="图表作文"><a href="#图表作文" class="headerlink" title="图表作文"></a>图表作文</h1><p>介绍主题一句话  也就是用自己的话来重述一下题干 就是这张图是关于什么内容</p><p>接下来 总结信息 第一部分信息是怎样的  第二部分信息是怎样 </p><p>接下来 将各部分信息进行对比描述</p><p>总结信息(不是得出观点, 是得出结论)  什么比什么更怎么样  陈述事实 切记不是陈述自己的观点</p><p><img src="/2022/04/11/2018-%E5%88%9D/1111.png"></p><h1 id="议论作文"><a href="#议论作文" class="headerlink" title="议论作文"></a>议论作文</h1><h2 id="第一段"><a href="#第一段" class="headerlink" title="第一段"></a>第一段</h2><p>第一句话: 介绍话题, paraphrase作文题目 </p><p>第二句话: 中心思想 陈述看法</p><h2 id="第二-x2F-三段"><a href="#第二-x2F-三段" class="headerlink" title="第二&#x2F;三段"></a>第二&#x2F;三段</h2><p>两种写作模式</p><h3 id="第一种-分析优缺点-或者问题与解决方案-这种"><a href="#第一种-分析优缺点-或者问题与解决方案-这种" class="headerlink" title="第一种: 分析优缺点 或者问题与解决方案 这种"></a>第一种: 分析优缺点 或者问题与解决方案 这种</h3><p>第一句: 主题句</p><p>第2&#x2F;3&#x2F;4&#x2F;: firstly(解释或者例子)  secondly(解释或者例子).., finally(解释或者例子)…</p><h3 id="第二种-观点-解释-例子"><a href="#第二种-观点-解释-例子" class="headerlink" title="第二种: 观点+解释+例子"></a>第二种: 观点+解释+例子</h3><p>第1句:观点</p><p>第2&#x2F;3&#x2F;4: 解释</p><p>第5句: 例子</p><h2 id="最后一段"><a href="#最后一段" class="headerlink" title="最后一段:"></a>最后一段:</h2><p>第一句话: 总结</p><p>第二句话: paraphrase第一段后面自己写的观点(注意不要出现新的观点)</p>]]></content>
    
    
    <summary type="html">试卷总结</summary>
    
    
    
    <category term="英语学习" scheme="http://l1562007999.github.io/categories/%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="试卷" scheme="http://l1562007999.github.io/categories/%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0/%E8%AF%95%E5%8D%B7/"/>
    
    
    <category term="学习" scheme="http://l1562007999.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="总结" scheme="http://l1562007999.github.io/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="笔记本" scheme="http://l1562007999.github.io/tags/%E7%AC%94%E8%AE%B0%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title>The Chinese legend of the butterfly lovers</title>
    <link href="http://l1562007999.github.io/2022/04/09/The-Chinese-legend-of-the-butterfly-lovers/"/>
    <id>http://l1562007999.github.io/2022/04/09/The-Chinese-legend-of-the-butterfly-lovers/</id>
    <published>2022-04-09T08:59:40.000Z</published>
    <updated>2022-04-09T09:24:07.472Z</updated>
    
    <content type="html"><![CDATA[<div style="text-align:center;font-weight:800;color:brown;text-size:40px">梁山伯与祝英台的故事---the butterfly lovers</div><br><div style="max-width:854px"><div style="position:relative;height:0;padding-bottom:56.25%"><iframe src="https://embed.ted.com/talks/lang/en/lijun_zhang_the_chinese_legend_of_the_butterfly_lovers" width="854" height="480" style="position:absolute;left:0;top:0;width:100%;height:100%" frameborder="0" scrolling="no" allowfullscreen></iframe></div></div><p>00:08</p><p>Adjusting her disguise, Zhu Yingtai prepared to bid her parents goodbye.<br>扮成男装后，祝英台准备和父母拜别。</p><p>She had always been a dutiful daughter— staying home and creating works of embroidery that brought her parents pride.<br>她一直都是个尽责的乖女儿， 总是待在家裡做女红， 让她的父母为此感到骄傲。</p><p>And yet, although only boys were allowed at the Confucius Academy in Hangzhou, what Yingtai truly wanted was to go to school.<br>虽然只有男性能到杭州的书院读书， 但祝英台最想要的就是去上学。</p><p>She begged her parents to let her attend dressed as a boy and, seeing her determination and clever disguises, they finally agreed.<br>她恳求父母让她女扮男装去上学， 而在看见女儿的决心 和完美的扮装后，他们终于答应了。</p><p>However, they only gave her permission when she promised to keep her true identity a secret and eventually return to the traditional path they’d set for her.<br>前提是祝英台答应这两件事： 她必须保守女儿身的秘密， 而且最后要回归他们为她规划好的传统女性道路。</p><p>00:44<br>Elated, Yingtai began her journey to Hangzhou.<br>祝英台兴高采烈地往杭州出发，</p><p>On the way, she found herself at a crossroads, unsure which route to take when a young man approached.<br>在旅途中 ，她来到一个十字路口， 正不知道该往哪个方向前进时， 出现了一个年轻男子。</p><p>As their eyes met, they shared an instant connection.<br>他们眼神一交会， 便立刻感受到强烈的吸引力。</p><p>Yingtai learned that his name was Liang Shanbo, and that he’d be her classmate at the academy, so they walked the rest of the way together, rapt in conversation.<br>英台得知这个年轻人叫梁山伯， 同样要去书院就读， 因此他们结伴同行，尽情畅谈。</p><p>Yingtai realized that, despite her meticulous disguise, she felt that she could finally be herself.<br>英台发现，虽然她的男装天衣无缝， 却能真正展露自己的模样。 </p><p>The two decided to celebrate what they thought would be a long, close friendship, and became sworn brothers.<br>两人都坚信这段友情将又长久又亲密， 为讚颂这段情谊，两人成为结拜兄弟。</p><p>01:17<br>At the academy, Yingtai buried herself in books and studied with Shanbo late into the nights. 在学院中，英台全心投入学习， 总是和山伯一同挑灯夜战。</p><p>The two felt at home so long as they were at each other’s sides.  只要在彼此身边， 两人就感到自在又放鬆。</p><p>They shared a room, but even though Shanbo questioned her about it, Yingtai always used the bathroom alone and buttoned her thick robes up to her chin— no matter the weather. 他们同住一室， 山伯也曾经问过英台， 为何她总是独自使用浴室， 以及为何总是将厚重的袍子扣到下巴。 </p><p>Now and again, Yingtai heard students muttering about her secretive behavior. 英台时不时就会听见 其他同学讨论她诡异的行为。</p><p>01:41<br>As months slipped into years, Yingtai continued to excel at her studies and felt like her past— and intended future—were lifetimes away. 从数月到数年，英台继续精进学业， 觉得以前在家的那段日子， 以及被规划好的未来都恍若隔世。</p><p>Yet the whispers grew louder.  但是同学的窃窃私语更加猖狂。</p><p>And after three years, she had no choice but to leave. 才入学第三年，她就只能离开学校。</p><p>Parting tearfully, Yingtai asked Shanbo to visit her. 英台含泪向山伯道别， 并要求山伯一定要来看她。</p><p>02:00<br>When Yingtai returned home, her parents announced that the Ma family from the neighboring village had sent a matchmaker to ask their permission for Yingtai to marry their son. 英台回家后， 父母告诉她， 邻村的马家派来一个媒婆求亲， 要求他们把她嫁给马家的儿子。</p><p>They’d found it a fitting match and accepted. 他们认为两家门当户对， 就接受了这桩亲事。</p><p>Trying to hide her disappointment, Yingtai honored their agreement.  英台试著藏起失望的情绪， 履行他们的决定。</p><p>But as she prepared for another new life, she thought of Shanbo. 但在她准备结婚时，她想起了山伯。</p><p>02:20<br>Meanwhile, he too was distracted— his studies dull without Yingtai near. 这时的山伯也无法集中注意力： 没有英台的陪伴，读书变得很无趣。</p><p>When Shanbo finally visited Yingtai’s house, he came upon a young woman. 在山伯终于拜访英台家时， 他遇见一个年轻女子。</p><p>He was about to ask for her brother, but as their eyes met, he recognized the young scholar he’d always loved. 他本来想问她，她的哥哥在哪裡， 但在他们视线交会时， 他认出了他一直深爱的同学。</p><p>Shanbo knew he couldn’t stand being separated from Yingtai again and asked her to marry him.  山伯知道自己无法忍受再次和她分别， 因此向她求婚。</p><p>But, heartbroken, Yingtai told him that she was already promised to another.  但是心碎的英台告诉他， 她已经被父母许配给另一个人了。</p><p>Shanbo was devastated, but he understood that Yingtai had to abide by her parents’ wishes, and they parted again. 山伯心碎了， 但他明白英台必须听从父母之命。他们就此分别。</p><p>02:54<br>Shanbo fell ill and grew weaker by the day. 山伯病倒了，每天都更加虚弱， </p><p>Worried, his family sent a matchmaker to the Zhu family.  他的家人很担心他， 就派了一个媒婆到英台家求亲，</p><p>But, because of Yingtai’s current engagement, her father refused the proposal. 但因为英台已经被许配给马家， 她的父亲拒绝了梁家的求亲。</p><p>Doing otherwise would bring their family public shame. 因为如果他同意这门婚事， 只会让自己家蒙羞。</p><p>Shanbo’s Illness took a turn for the worse and, sensing he wouldn’t live to see her married, Shanbo wrote Yingtai a final letter.  山伯的病明显加重， 知道自己无法活到英台成亲的那天， 山伯写了一封绝笔信给英台。</p><p>If Yingtai loved him, he asked that she burn incense in front of his tomb when she was on her way to the Ma family. 他说，如果英台爱他， 就请她在去马家成亲的路上， 到他墓前上香。</p><p>03:21<br>When Yingtai’s wedding day came, it also felt like a funeral.  英台出嫁那天，气氛像丧礼般阴沉。</p><p>As the procession wound through town under stormy skies, Yingtai broke off and knelt in front of Shanbo’s tomb, lighting incense and offering sacrifices through her tears. 出嫁队伍在狂风暴雨下穿越城镇。 英台突然下轿，跪在山伯的墓前， 哭著烧香祭祀山伯的灵魂。</p><p>03:36<br>Suddenly, a clap of thunder sounded above and a lightning bolt shot through the tomb, fracturing the stone. 突然，天上响起一阵雷鸣， 一道闪电劈开了坟墓， 使石头裂开。</p><p>Without hesitation, Yingtai threw herself in. 英台毫不犹豫地跳进坟墓。</p><p>03:46<br>As her parents rushed to rescue their daughter, two butterflies fluttered out of the crack.  This time, Yingtai had transformed for good.  在她的父母赶过去救女儿时， 两隻蝴蝶从裂缝中飞出来， 这一次，英台永远变成另一个样子。</p><p>Finally free, she could float forever with Shanbo at her side. 终于获得自由的英台， 可以永远和山伯一起飞翔了。</p>]]></content>
    
    
    <summary type="html">梁山伯与祝英台的故事</summary>
    
    
    
    <category term="英语学习" scheme="http://l1562007999.github.io/categories/%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="英语" scheme="http://l1562007999.github.io/tags/%E8%8B%B1%E8%AF%AD/"/>
    
    <category term="TED-ED" scheme="http://l1562007999.github.io/tags/TED-ED/"/>
    
    <category term="梁祝" scheme="http://l1562007999.github.io/tags/%E6%A2%81%E7%A5%9D/"/>
    
  </entry>
  
  <entry>
    <title>2019-初</title>
    <link href="http://l1562007999.github.io/2022/04/09/2019-%E5%88%9D/"/>
    <id>http://l1562007999.github.io/2022/04/09/2019-%E5%88%9D/</id>
    <published>2022-04-09T06:33:26.000Z</published>
    <updated>2022-04-17T08:58:05.736Z</updated>
    
    <content type="html"><![CDATA[<h1 id="听力"><a href="#听力" class="headerlink" title="听力"></a>听力</h1><blockquote><p>相关的例子<br>relate example</p></blockquote><blockquote><p>传统的学徒训练<br>traditional apprentice training</p></blockquote><h1 id="Vovabulary-amp-Grammar-词汇语法"><a href="#Vovabulary-amp-Grammar-词汇语法" class="headerlink" title="Vovabulary &amp; Grammar 词汇语法"></a>Vovabulary &amp; Grammar 词汇语法</h1><p>in line with : 与…一致</p><blockquote><p> in terms of: 依据; 根据…来解释</p></blockquote><ol><li>The wealth of a country should be measured <mark>in terms of<mark> the health and happiness of tis people as well as the material goods it can produce.</li><li>In terms of tropical storms, sure, in terms of hurricanes, not even close.</li></ol><blockquote><p> forthrightly:  直率的，直截了当的〔含褒义〕 SYN straightforward</p></blockquote><ol><li>She answered in her usual forthright manner.<br>她以一贯的直率作了回答。</li></ol><blockquote><p><strong>not so much.. as …</strong>  这是固定搭配:  与其说是, 不如说是….</p></blockquote><ol><li>She was not so much nervous as impatient for the journey to be over.<br>说她紧张，不如说她是不耐烦，希望旅途快点结束。</li></ol><blockquote><p>Once 可以引导条件状语从句</p></blockquote><ol><li>Once I get him a job, he’ll be fine.<br>一旦我帮他找到了工作，他就会好的。</li></ol><blockquote><p><strong>special</strong>  n.  特价的意思</p></blockquote><p>especially American English a lower price than usual for a particular product for a short period of time </p><p>特价 </p><p>SYN special offer</p><ol><li><p>a lunch special for $4.99<br>4.99 美元的特惠午餐</p></li><li><p>Breyer’s ice cream is on special this week.<br>布瑞尔店的冰激凌本周特价。</p></li></ol><h2 id="Cloze-完形填空"><a href="#Cloze-完形填空" class="headerlink" title="Cloze 完形填空"></a>Cloze 完形填空</h2><p>It may explain why, <code>on average</code>, women have a superior ability with words to men.</p><blockquote><p> dyslexic:  a condition that makes it difficult for someone to read and spell 诵读困难</p></blockquote><p>小说家: novelist(s)</p><blockquote><p>主张v. : maintain</p></blockquote><p>to keep stating that sth is true, even though other people do not agree or do not believe it 坚持意见；固执己见 </p><ol><li><p>The men maintained (that) they were out of the country when the crime was committed. </p><p>这几个男人坚持说案发时他们在国外</p></li></ol><blockquote><p>怀疑的:  doubtful   别忘记了中间的b  虽然b不发音</p></blockquote><h1 id="Translation-翻译"><a href="#Translation-翻译" class="headerlink" title="Translation 翻译"></a>Translation 翻译</h1><blockquote><p> something formal and instructive</p></blockquote><p>这里注意 翻译为名词</p><p>正事  和  指示</p><blockquote><p> 文科和理科</p></blockquote><p>arts and science</p><blockquote><p>各自的</p></blockquote><p>respective</p><h1 id="Error-Correction-改错"><a href="#Error-Correction-改错" class="headerlink" title="Error Correction 改错"></a>Error Correction 改错</h1><blockquote><p>穿上短裤</p></blockquote><p>使用put on underwear  而不是 put up</p><blockquote><p>a packed suitcase</p></blockquote><p>不是 a packing suitcase   packed 才能作形容词 表示塞满了的状态</p><h1 id="Writing-写作"><a href="#Writing-写作" class="headerlink" title="Writing 写作"></a>Writing 写作</h1><h2 id="Chart-图表"><a href="#Chart-图表" class="headerlink" title="Chart 图表"></a>Chart 图表</h2><p><img src="/2022/04/09/2019-%E5%88%9D/22222.jpg" alt="22222"></p><blockquote><p>分析</p></blockquote><p><img src="/2022/04/09/2019-%E5%88%9D/Snipaste_2022-04-09_15-24-10.png"></p><h2 id="议论文"><a href="#议论文" class="headerlink" title="议论文"></a>议论文</h2><p>![1 (1)](1 (2).jpg)</p><p>![1 (1)](1 (1).jpg)</p><blockquote><p> 分析</p></blockquote><p><img src="/2022/04/09/2019-%E5%88%9D/3.jpg" alt="3"></p>]]></content>
    
    
    <summary type="html">试卷总结</summary>
    
    
    
    <category term="英语学习" scheme="http://l1562007999.github.io/categories/%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="试卷" scheme="http://l1562007999.github.io/categories/%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0/%E8%AF%95%E5%8D%B7/"/>
    
    
    <category term="学习" scheme="http://l1562007999.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="总结" scheme="http://l1562007999.github.io/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="笔记本" scheme="http://l1562007999.github.io/tags/%E7%AC%94%E8%AE%B0%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title>JS-本地储存</title>
    <link href="http://l1562007999.github.io/2022/04/09/JS-%E6%9C%AC%E5%9C%B0%E5%82%A8%E5%AD%98/"/>
    <id>http://l1562007999.github.io/2022/04/09/JS-%E6%9C%AC%E5%9C%B0%E5%82%A8%E5%AD%98/</id>
    <published>2022-04-09T04:01:41.000Z</published>
    <updated>2022-04-09T04:33:23.615Z</updated>
    
    <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>随着互联网的快速发展，基于网页的应用越来越普遍，同时也变的越来越复杂，为了满足各种各样的需求，会经常性在本地存储大量的数据，HTML5规范提出了相关解决方案。</p><h1 id="本地存储特性"><a href="#本地存储特性" class="headerlink" title="本地存储特性"></a>本地存储特性</h1><p>1、数据存储在用户浏览器中<br>2、设置、读取方便、甚至页面刷新不丢失数据<br>3、容量较大，sessionStorage约5M、localStorage约20M<br>4、只能存储字符串，可以将对象JSON.stringify() 编码后存储</p><h1 id="两种存储方式"><a href="#两种存储方式" class="headerlink" title="两种存储方式"></a>两种存储方式</h1><h2 id="window-sessionStorage"><a href="#window-sessionStorage" class="headerlink" title="window.sessionStorage"></a>window.sessionStorage</h2><h3 id="介绍-1"><a href="#介绍-1" class="headerlink" title="介绍"></a>介绍</h3><ol><li><p>生命周期为关闭浏览器窗口</p><p>​    生命周期就是数据销毁的时间点<br>​    不关闭该页面  可以刷新  数据还在</p></li><li><p>在同一个窗口(页面)下数据可以共享</p></li><li><p>以键值对的形式存储使用</p></li><li><p>本页面下的任何地方都可以使用</p></li></ol><h3 id="存储数据"><a href="#存储数据" class="headerlink" title="存储数据:"></a>存储数据:</h3><blockquote><p>sessionStorage.setItem(key, value)</p></blockquote><p>key:<br>    自定义属性名 如uname    要用单引号包起来<br>value:<br>    实现将获得的值存入一个变量<br>这个key就是变量的名字<br>        <code>var val = input.value;</code></p><p>实例</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">set.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="comment">//当我们点击了之后, 就可以把表单里面的值存储起来</span></span><br><span class="line">    <span class="keyword">var</span> val = input.<span class="property">value</span>;</span><br><span class="line">    sessionStorage.<span class="title function_">setItem</span>(<span class="string">&#x27;uname&#x27;</span>, val)</span><br><span class="line">    </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>可以在f12 下的应用程序里面的存储    绘画存储里面查看</p><h3 id="获取数据"><a href="#获取数据" class="headerlink" title="获取数据:"></a>获取数据:</h3><blockquote><p>sessionStorage.getItem(key)</p></blockquote><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">get.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="comment">//当我们点击了之后, 就可以把表单里面的值获取过来</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(sessionStorage.<span class="title function_">getItem</span>(<span class="string">&#x27;uname&#x27;</span>));</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据:"></a>删除数据:</h3><blockquote><p>sessionStorage.removeItem(key)</p></blockquote><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">remove.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">//当我们点击了之后, 就可以把表单里面的值根据属性名删除相应的属性值</span></span><br><span class="line">    sessionStorage.<span class="title function_">removeItem</span>(<span class="string">&#x27;uname&#x27;</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="改数据-就是重新赋值"><a href="#改数据-就是重新赋值" class="headerlink" title="改数据  就是重新赋值"></a>改数据  就是重新赋值</h3><blockquote><p>用储存数据(<code>sessionStorage.setItem(key, value)</code>)的形式 重新给已设定的属性名赋值  达到覆盖之前的属性值的目的</p></blockquote><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">set.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">//当我们点击了之后, 就可以把表单里面的值存储起来</span></span><br><span class="line">    <span class="keyword">var</span> val = input.<span class="property">value</span>;</span><br><span class="line">    sessionStorage.<span class="title function_">setItem</span>(<span class="string">&#x27;uname&#x27;</span>, val);</span><br><span class="line">    sessionStorage.<span class="title function_">setItem</span>(<span class="string">&#x27;pwd&#x27;</span>, val);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="删除所有数据"><a href="#删除所有数据" class="headerlink" title="删除所有数据:"></a>删除所有数据:</h3><blockquote><p>sessionStorage.clear()</p></blockquote><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">del.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="comment">//当我们点击了之后,就可以把表单里面所有本地数据全部删除</span></span><br><span class="line">    sessionStorage.<span class="title function_">clear</span>();</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>这个意义: 括号内为空</p><h2 id="window-localStorage"><a href="#window-localStorage" class="headerlink" title="window.localStorage"></a>window.localStorage</h2><h3 id="介绍-2"><a href="#介绍-2" class="headerlink" title="介绍"></a>介绍</h3><ol><li><p>声明周期永久生效，除非手动删除 否则关闭页面也会存在</p></li><li><p><strong>可以多窗口（页面）共享（同一浏览器可以共享）</strong></p></li><li><p>以键值对的形式存储使用</p></li></ol><h3 id="存储数据-1"><a href="#存储数据-1" class="headerlink" title="存储数据:"></a>存储数据:</h3><blockquote><p>localStorage.setItem(key, value)</p></blockquote><h3 id="获取数据-1"><a href="#获取数据-1" class="headerlink" title="获取数据:"></a>获取数据:</h3><blockquote><p>localStorage.getItem(key)</p></blockquote><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> input = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;input&#x27;</span>);</span><br><span class="line">    <span class="keyword">var</span> set = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.set&#x27;</span>);</span><br><span class="line">    <span class="keyword">var</span> get = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.get&#x27;</span>)</span><br><span class="line">    <span class="keyword">var</span> remove = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.remove&#x27;</span>)</span><br><span class="line">    <span class="keyword">var</span> del =<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.del&#x27;</span>)</span><br><span class="line">    set.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">//当我们点击了之后, 就可以把表单里面的值存储起来</span></span><br><span class="line">        <span class="keyword">var</span> val = input.<span class="property">value</span>;</span><br><span class="line">        <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;uname&#x27;</span>, val);</span><br><span class="line">        <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;pwd&#x27;</span>, val);</span><br><span class="line">    &#125;)</span><br><span class="line">    get.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">//当我们点击了之后, 就可以把表单里面的值获取过来</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;uname&#x27;</span>));</span><br><span class="line">    &#125;)</span><br><span class="line">    remove.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">//当我们点击了之后, 就可以把表单里面的值根据属性名删除相应的属性值</span></span><br><span class="line">        <span class="variable language_">localStorage</span>.<span class="title function_">removeItem</span>(<span class="string">&#x27;uname&#x27;</span>);</span><br><span class="line">    &#125;)</span><br><span class="line">    del.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="comment">//当我们点击了之后,就可以把表单里面所有本地数据全部删除</span></span><br><span class="line">        <span class="variable language_">localStorage</span>.<span class="title function_">clear</span>();</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="删除数据-1"><a href="#删除数据-1" class="headerlink" title="删除数据:"></a>删除数据:</h3><blockquote><p>localStorage.removeItem(key)</p></blockquote><h3 id="移除所有数据"><a href="#移除所有数据" class="headerlink" title="移除所有数据"></a>移除所有数据</h3><blockquote><p>localStorage.removeItem(key)</p></blockquote><h1 id="案例-记住用户名"><a href="#案例-记住用户名" class="headerlink" title="案例:记住用户名"></a>案例:记住用户名</h1><h2 id="要求"><a href="#要求" class="headerlink" title="要求"></a>要求</h2><p>如果勾选记住用户名， 下次用户打开浏览器，就在文本框里面自动显示上次登录的用户名</p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>① 把数据存起来，用到本地存储<br>② 关闭页面，也可以显示用户名，所以用到localStorage<br>③ 打开页面，先判断是否有这个用户名，如果有，就在表单里面显示用户名，并且勾选复选框<br>④ 当复选框发生改变的时候 change事件<br>⑤ 如果勾选，就存储，否则就移除</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;username&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;remember&quot;</span>&gt;</span> 记住用户名</span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> username = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#username&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> remeber = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#remember&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span>(<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;username&#x27;</span>))&#123;</span></span><br><span class="line"><span class="language-javascript">            username.<span class="property">value</span> = <span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;username&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">            remember.<span class="property">checked</span> = <span class="string">&#x27;true&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        remember.<span class="title function_">addEventListener</span>(<span class="string">&#x27;change&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">checked</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;username&#x27;</span>, username.<span class="property">value</span>)</span></span><br><span class="line"><span class="language-javascript">            &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">localStorage</span>.<span class="title function_">removeItem</span>(<span class="string">&#x27;username&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><div style="text-align:center">---完结撒花---</div>]]></content>
    
    
    <summary type="html">待补充的副标题</summary>
    
    
    
    <category term="JavaScript" scheme="http://l1562007999.github.io/categories/JavaScript/"/>
    
    
    <category term="JS" scheme="http://l1562007999.github.io/tags/JS/"/>
    
    <category term="学习" scheme="http://l1562007999.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="本地存储" scheme="http://l1562007999.github.io/tags/%E6%9C%AC%E5%9C%B0%E5%AD%98%E5%82%A8/"/>
    
    <category term="记住用户名" scheme="http://l1562007999.github.io/tags/%E8%AE%B0%E4%BD%8F%E7%94%A8%E6%88%B7%E5%90%8D/"/>
    
  </entry>
  
  <entry>
    <title>hexo 写文章创建文件自动打开编辑器</title>
    <link href="http://l1562007999.github.io/2022/04/08/hexo-%E5%86%99%E6%96%87%E7%AB%A0%E5%88%9B%E5%BB%BA%E6%96%87%E4%BB%B6%E8%87%AA%E5%8A%A8%E6%89%93%E5%BC%80%E7%BC%96%E8%BE%91%E5%99%A8/"/>
    <id>http://l1562007999.github.io/2022/04/08/hexo-%E5%86%99%E6%96%87%E7%AB%A0%E5%88%9B%E5%BB%BA%E6%96%87%E4%BB%B6%E8%87%AA%E5%8A%A8%E6%89%93%E5%BC%80%E7%BC%96%E8%BE%91%E5%99%A8/</id>
    <published>2022-04-08T12:33:37.000Z</published>
    <updated>2022-04-08T13:53:05.491Z</updated>
    
    <content type="html"><![CDATA[<p>在<code>Hexo</code>中新建一篇博文非常简单，只需要在命令行中键入以下命令然后回车即可：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo n <span class="string">&quot;The title of your blog&quot;</span></span><br></pre></td></tr></table></figure><p>然后hexo就会在hexo的根目录下的<code>source</code>目录下的<code>_post</code>目录下自动创建相对应的md文件。然后我们只需要找到刚刚生成的文件进行编辑就可以了。</p><p>但是一旦文章比较多的情况下，我们就需要在成堆的md文件中找刚刚创建的博文，这就比较麻烦。</p><hr><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><ol><li>新建<code>scripts</code>目录（hexo根目录）</li><li>创建<code>auto_open.js</code>文件,如下</li></ol><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> spawn = <span class="built_in">require</span>(<span class="string">&#x27;child_process&#x27;</span>).<span class="property">exec</span>;</span><br><span class="line">hexo.<span class="title function_">on</span>(<span class="string">&#x27;new&#x27;</span>, <span class="keyword">function</span>(<span class="params">data</span>)&#123;</span><br><span class="line">  <span class="title function_">spawn</span>(<span class="string">&#x27;start  &quot;C:\Program Files\Typora\Typora.exe&quot; &#x27;</span> + data.<span class="property">path</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>PS：上面自行替换为<code>markdown编辑器绝对路径.exe</code>,这里我使用的是<code>typora</code>的地址</p>]]></content>
    
    
    <summary type="html">创建博客 自动编辑器打开</summary>
    
    
    
    <category term="教程" scheme="http://l1562007999.github.io/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="hexo" scheme="http://l1562007999.github.io/tags/hexo/"/>
    
    <category term="博客维护" scheme="http://l1562007999.github.io/tags/%E5%8D%9A%E5%AE%A2%E7%BB%B4%E6%8A%A4/"/>
    
  </entry>
  
  <entry>
    <title>JS-移动端页面特效</title>
    <link href="http://l1562007999.github.io/2022/04/08/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%A1%B5%E9%9D%A2%E7%89%B9%E6%95%88/"/>
    <id>http://l1562007999.github.io/2022/04/08/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%A1%B5%E9%9D%A2%E7%89%B9%E6%95%88/</id>
    <published>2022-04-08T04:42:35.000Z</published>
    <updated>2022-04-09T04:34:27.442Z</updated>
    
    <content type="html"><![CDATA[<h1 id="触屏事件"><a href="#触屏事件" class="headerlink" title="触屏事件"></a>触屏事件</h1><p><strong>移动端浏览器兼容性较好，我们不需要考虑以前 JS 的兼容性问题，可以放心的使用原生 JS 书写效果，但是移动端也有自己独特的地方。比如触屏事件 touch（也称触摸事件），Android 和 IOS 都有。</strong></p><h2 id="触屏事件touch"><a href="#触屏事件touch" class="headerlink" title="触屏事件touch"></a>触屏事件touch</h2><p>touch 对象代表一个触摸点。触摸点可能是一根手指，也可能是一根触摸笔。触屏事件可响应用户手指（或触控<br>笔）对屏幕或者触控板操作。</p><h3 id="touchstart"><a href="#touchstart" class="headerlink" title="touchstart"></a>touchstart</h3><p>手指触摸到一个DOM元素时触发</p><h3 id="touchmove"><a href="#touchmove" class="headerlink" title="touchmove"></a>touchmove</h3><p>手指在一个DOM元素上滑动时触发</p><h3 id="touchend"><a href="#touchend" class="headerlink" title="touchend"></a>touchend</h3><p>手指从一个DOM元素上移开时触发</p><blockquote><p>实例</p></blockquote><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">    div.<span class="title function_">addEventListener</span>(<span class="string">&#x27;touchstart&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;我摸了你&#x27;</span>);</span><br><span class="line">    &#125;)</span><br><span class="line">    div.<span class="title function_">addEventListener</span>(<span class="string">&#x27;touchmove&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>)&#123;   <span class="comment">//手指来回触摸事件</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;我继续摸&#x27;</span>);</span><br><span class="line">    &#125;)</span><br><span class="line">    div.<span class="title function_">addEventListener</span>(<span class="string">&#x27;touchend&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;我走了&#x27;</span>);</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="触摸事件对象TouchEvent"><a href="#触摸事件对象TouchEvent" class="headerlink" title="触摸事件对象TouchEvent"></a>触摸事件对象TouchEvent</h2><p>TouchEvent 是一类描述手指在触摸平面（触摸屏、触摸板等）的状态变化的事件。这类事件用于描述一个或多个触点，使开发者可以检测触点的移动，触点的增加和减少，等等</p><h3 id="touches"><a href="#touches" class="headerlink" title="touches"></a>touches</h3><p>正在触摸屏幕的所有手指的一个列表</p><p>整个屏幕的手指状态</p><h3 id="targetTouches"><a href="#targetTouches" class="headerlink" title="targetTouches"></a>targetTouches</h3><p>正在触摸当前DOM元素上的手指的一个列表</p><p>当前元素上的手指状态</p><h3 id="changedTouches"><a href="#changedTouches" class="headerlink" title="changedTouches"></a>changedTouches</h3><p>手指状态发生了改变的列表, 从无到有, 从有到无</p><p>不会有touches和targetTouches的信息<br>会有手指离开的位置的信息</p><blockquote><p>实例</p></blockquote><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">div.<span class="title function_">addEventListener</span>(<span class="string">&#x27;touchstart&#x27;</span>, <span class="keyword">function</span>(<span class="params">e</span>)&#123;</span><br><span class="line">    <span class="comment">// console.log(&#x27;我摸了你&#x27;);</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">targetTouches</span>[<span class="number">0</span>]);</span><br><span class="line">    <span class="comment">// targetTouches[0] 就可以获得正在触摸DOM元素的第一个手指的相关信息 手指的坐标等等...</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>可以获得很多关于这个手指的很多信息</p><p>clientX&#x2F;Y<br>    触摸点在可视区距离左上的坐标<br><strong><strong>pageX&#x2F;Y</strong><br>    触摸点在整个页面的距离左上的坐标</strong><br>screenX&#x2F;Y<br>    触摸点在整个屏幕的距离左上的坐标<br>target:div<br>    触摸点点击的当前元素的名字</p><h2 id="移动端拖动元素"><a href="#移动端拖动元素" class="headerlink" title="移动端拖动元素"></a>移动端拖动元素</h2><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><ol><li>touchstart、touchmove、touchend 可以实现拖动元素</li><li>但是拖动元素需要当前手指的坐标值 我们可以使用 targetTouches[0] 里面的pageX 和 pageY </li><li>移动端拖动的原理： 手指移动中，计算出手指移动的距离。然后用盒子原来的位置 + 手指移动的距离</li><li>手指移动的距离： 手指滑动中的位置 减去 手指刚开始触摸的位</li></ol><h3 id="拖动元素三部曲"><a href="#拖动元素三部曲" class="headerlink" title="拖动元素三部曲"></a>拖动元素三部曲</h3><p>（1） 触摸元素 touchstart： 获取手指初始坐标，同时获得盒子原来的位置<br>（2） 移动手指 touchmove： 计算手指的滑动距离，并且移动盒子<br>（3） 离开手指 touchend:</p><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><p>手指移动也会触发滚动屏幕所以这里要阻止默认的屏幕滚动 e.preventDefault</p><h1 id="移动端常见特效"><a href="#移动端常见特效" class="headerlink" title="移动端常见特效"></a>移动端常见特效</h1><h2 id="移动端轮播图"><a href="#移动端轮播图" class="headerlink" title="移动端轮播图"></a>移动端轮播图</h2><h3 id="移动端轮播图功能和基本PC端一致。"><a href="#移动端轮播图功能和基本PC端一致。" class="headerlink" title="移动端轮播图功能和基本PC端一致。"></a>移动端轮播图功能和基本PC端一致。</h3><ol><li>可以自动播放图片</li><li>手指可以拖动播放轮播图</li></ol><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>① 自动播放功能<br>② 开启定时器<br>③ 移动端移动，可以使用translate 移动<br>④ 想要图片优雅的移动，请添加过渡效果</p><h3 id="无缝滚动"><a href="#无缝滚动" class="headerlink" title="无缝滚动"></a>无缝滚动</h3><p>② 注意，我们判断条件是要等到图片滚动完毕再去判断，就是过渡完成后判断<br>③ 此时需要添加检测过渡完成事件 transitionend<br>④ 判断条件： 如果索引号等于 3 说明走到最后一张图片，此时 索引号要复原为 0<br>⑤ 此时图片，去掉过渡效果，然后移动<br>⑥ 如果索引号小于0， 说明是倒着走， 索引号等于2<br>⑦ 此时图片，去掉过渡效果，然后移动</p><h3 id="小圆点跟随图片滚动特效"><a href="#小圆点跟随图片滚动特效" class="headerlink" title="小圆点跟随图片滚动特效"></a>小圆点跟随图片滚动特效</h3><h4 id="介绍classList属性"><a href="#介绍classList属性" class="headerlink" title="介绍classList属性"></a>介绍classList属性</h4><p>classList属性是HTML5新增的一个属性，返回元素的类名。但是ie10以上版本支持。</p><p>该属性用于在元素中添加，移除及切换 CSS 类。有以下方</p><blockquote><p>添加类</p></blockquote><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">element.<span class="property">classList</span>.<span class="property">add</span>（’类名’）；</span><br><span class="line">focus.<span class="property">classList</span>.<span class="title function_">add</span>(‘current’);</span><br></pre></td></tr></table></figure><blockquote><p>移除类：</p></blockquote><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">element.<span class="property">classList</span>.<span class="property">remove</span>（’类名’）;</span><br><span class="line">focus.<span class="property">classList</span>.<span class="title function_">remove</span>(‘current’);</span><br></pre></td></tr></table></figure><blockquote><p>切换类</p></blockquote><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">element.<span class="property">classList</span>.<span class="property">toggle</span>（’类名’）；</span><br></pre></td></tr></table></figure><p>​        小实例</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">.bg &#123;</span><br><span class="line">    background-color: black;</span><br><span class="line">&#125;</span><br><span class="line">var btn = document.querySelector(&#x27;button&#x27;);</span><br><span class="line">btn.addEventListener(&#x27;click&#x27;, function()&#123;</span><br><span class="line">    document.body.classList.toggle(&#x27;bg&#x27;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="注意-1"><a href="#注意-1" class="headerlink" title="注意"></a>注意</h4><p>注意以上方法里面，所有类名都不带点</p><blockquote><p>区别</p></blockquote><p>className  是覆盖以前的类名</p><p>classList.add( )   是追加类名, 不会覆盖以前的类名</p><h3 id="小圆点跟随变化效果"><a href="#小圆点跟随变化效果" class="headerlink" title="小圆点跟随变化效果"></a>小圆点跟随变化效果</h3><p>② 把ol里面li带有current类名的选出来去掉类名 remove<br>③ 让当前索引号 的小li 加上 current add<br>④ 但是，是等着过渡结束之后变化，所以这个写到 transitionend 事件里</p><blockquote><p>代码</p></blockquote><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//小圆点跟随变化效果</span></span><br><span class="line">ol.<span class="title function_">querySelector</span>(<span class="string">&#x27;li.current&#x27;</span>).<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&#x27;current&#x27;</span>);</span><br><span class="line">ol.<span class="property">children</span>[index].<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;current&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="手指滑动轮播图"><a href="#手指滑动轮播图" class="headerlink" title="手指滑动轮播图"></a>手指滑动轮播图</h3><p>② 本质就是ul跟随手指移动，简单说就是移动端拖动元素<br>③ 触摸元素 touchstart： 获取手指初始坐标<br>④ 移动手指 touchmove： 计算手指的滑动距离，并且移动盒子<br>⑤ 离开手指 touchend: 根据滑动的距离分不同的情况<br>⑥ 如果移动距离小于 某个像素 就回弹原来位置<br>⑦ 如果移动距离大于某个像素就往下一张滑动。<br>⑧ 滑动也分为左滑动和右滑动 判断的标准是 移动距离正负 如果是负值就是左滑 反之右滑<br>⑨ 如果是左滑 就播放下一张 （index++）<br>⑩ 如果是右滑 就播放上一张 (index–)</p><h2 id="返回顶部"><a href="#返回顶部" class="headerlink" title="返回顶部"></a>返回顶部</h2><h3 id="要求"><a href="#要求" class="headerlink" title="要求"></a>要求</h3><p>当页面滚动某个地方，就显示，否则隐藏<br>点击可以返回顶部</p><h3 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h3><p>① 滚动某个地方显示<br>② 事件： scroll 页面滚动事件<br>③ 如果被卷去的头部（window.pageYOffset ）大于某个数值<br>④ 点击， window.scroll(0,0) 返回顶部</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//返回顶部模块</span></span><br><span class="line"><span class="keyword">var</span> goBack =<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.goBack&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> nav =<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;nav&#x27;</span>)</span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;scroll&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable language_">window</span>.<span class="property">pageYOffset</span>&gt;=nav.<span class="property">offsetTop</span>) &#123;</span><br><span class="line">        goBack.<span class="property">style</span>.<span class="property">display</span> =<span class="string">&#x27;block&#x27;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        goBack.<span class="property">style</span>.<span class="property">display</span> =<span class="string">&#x27;none&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line">goBack.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">window</span>.<span class="title function_">scroll</span>(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="click-延时解决方案"><a href="#click-延时解决方案" class="headerlink" title="click 延时解决方案"></a>click 延时解决方案</h2><h4 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h4><p>移动端 click 事件会有 300ms 的延时，原因是移动端屏幕双击会缩放(double tap to zoom) 页面。</p><h3 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h3><h4 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h4><ol><li>禁用缩放。 浏览器禁用默认的双击缩放行为并且去掉 300ms 的点击延迟。</li></ol><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;user-scalable=no&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h4><ol start="2"><li>利用touch事件自己封装这个事件解决 300ms 延迟。</li></ol><blockquote><p>原理</p></blockquote><ol><li>当我们手指触摸屏幕，记录当前触摸时间</li><li>当我们手指离开屏幕， 用离开的时间减去触摸的时间</li><li>如果时间小于150ms，并且没有滑动过屏幕， 那么我们就定义为点击动作</li></ol><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//封装tap，解决click 300ms 延时</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">tap</span> (obj, callback) &#123;</span><br><span class="line"> <span class="keyword">var</span> isMove = <span class="literal">false</span>;</span><br><span class="line"> <span class="keyword">var</span> startTime = <span class="number">0</span>; <span class="comment">// 记录触摸时候的时间变量</span></span><br><span class="line"> obj.<span class="title function_">addEventListener</span>(<span class="string">&#x27;touchstart&#x27;</span>, <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line"> startTime = <span class="title class_">Date</span>.<span class="title function_">now</span>(); <span class="comment">// 记录触摸时间</span></span><br><span class="line"> &#125;);</span><br><span class="line"> obj.<span class="title function_">addEventListener</span>(<span class="string">&#x27;touchmove&#x27;</span>, <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line"> isMove = <span class="literal">true</span>; <span class="comment">// 看看是否有滑动，有滑动算拖拽，不算点击</span></span><br><span class="line"> &#125;);</span><br><span class="line"> obj.<span class="title function_">addEventListener</span>(<span class="string">&#x27;touchend&#x27;</span>, <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line"> <span class="keyword">if</span> (!isMove &amp;&amp; (<span class="title class_">Date</span>.<span class="title function_">now</span>() - startTime) &lt; <span class="number">150</span>) &#123; <span class="comment">// 如果手指触摸和离开时间小于150ms 算点击</span></span><br><span class="line"> callback &amp;&amp; <span class="title function_">callback</span>(); <span class="comment">// 执行回调函数</span></span><br><span class="line"> &#125;</span><br><span class="line"> isMove = <span class="literal">false</span>; <span class="comment">// 取反 重置</span></span><br><span class="line"> startTime = <span class="number">0</span>;</span><br><span class="line"> &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//调用 </span></span><br><span class="line"> <span class="title function_">tap</span>(div, <span class="keyword">function</span>(<span class="params"></span>)&#123; <span class="comment">// 执行代码 &#125;);     </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//  goBack    function()  是  function()&#123;</span></span><br><span class="line">        <span class="variable language_">window</span>.<span class="title function_">scroll</span>(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="方法三"><a href="#方法三" class="headerlink" title="方法三"></a>方法三</h4><ol start="3"><li>使用插件。 fastclick 插件解决 300ms 延迟。</li></ol><h1 id="移动端常用开发插件"><a href="#移动端常用开发插件" class="headerlink" title="移动端常用开发插件"></a>移动端常用开发插件</h1><h2 id="什么是插件"><a href="#什么是插件" class="headerlink" title="什么是插件"></a>什么是插件</h2><p>JS 插件是 js 文件，它遵循一定规范编写，方便程序展示效果，拥有特定功能且方便调用。如轮播图和瀑布流插件。<br>特点：它一般是为了解决某个问题而专门存在，其功能单一，并且比较小。<br>我们以前写的animate.js 也算一个最简单的插件</p><h2 id="fastclick-插件解决-300ms-延迟。"><a href="#fastclick-插件解决-300ms-延迟。" class="headerlink" title="fastclick 插件解决 300ms 延迟。"></a>fastclick 插件解决 300ms 延迟。</h2><p>GitHub官网地址： <a href="https://github.com/ftlabs/fastclick">https://github.com/ftlabs/fastclick</a></p><h2 id="使用插件"><a href="#使用插件" class="headerlink" title="使用插件"></a>使用插件</h2><ol><li>引入 js 插件文件。</li><li>按照规定语法使用。</li></ol><h2 id="Swiper轮播图插件的使用"><a href="#Swiper轮播图插件的使用" class="headerlink" title="Swiper轮播图插件的使用"></a>Swiper轮播图插件的使用</h2><p>中文官网地址： <a href="https://www.swiper.com.cn/">https://www.swiper.com.cn/</a> </p><h3 id="1-引入插件相关文件。"><a href="#1-引入插件相关文件。" class="headerlink" title="1. 引入插件相关文件。"></a>1. 引入插件相关文件。</h3><p>把min.css与min.js文件放到自己的对应目录下面</p><p>在index.html中 通过链接引入</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 引入我们的css初始化文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css/normalize.css&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 引入我们首页的css --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css/index.css&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 引入swipercss文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css/swiper.min.css&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 引入swiper js 文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/swiper.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 引入我们自己的js文件  我们自己写的js依赖上面的swiper  所以要写在下面--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/index.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-按照规定语法使用"><a href="#2-按照规定语法使用" class="headerlink" title="2. 按照规定语法使用"></a>2. 按照规定语法使用</h3><h4 id="选择swiper的选中样式html的源代码"><a href="#选择swiper的选中样式html的源代码" class="headerlink" title="选择swiper的选中样式html的源代码"></a>选择swiper的选中样式html的源代码</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Swiper --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;swiper-container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;swiper-wrapper&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;swiper-slide&quot;</span>&gt;</span>Slide 1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;swiper-slide&quot;</span>&gt;</span>Slide 2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;swiper-slide&quot;</span>&gt;</span>Slide 3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;swiper-slide&quot;</span>&gt;</span>Slide 4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;swiper-slide&quot;</span>&gt;</span>Slide 5<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;swiper-slide&quot;</span>&gt;</span>Slide 6<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;swiper-slide&quot;</span>&gt;</span>Slide 7<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;swiper-slide&quot;</span>&gt;</span>Slide 8<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;swiper-slide&quot;</span>&gt;</span>Slide 9<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;swiper-slide&quot;</span>&gt;</span>Slide 10<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Add Pagination --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;swiper-pagination&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p> 说明</p></blockquote><ul><li>放入原本轮播图的一个图片的位置  替换这个原本的图片</li><li>注意不要更改里面的结构和类名</li><li>换图片就是Slide 1   Slide2…  换成img标签</li></ul><h4 id="把源代码中css相关样式部分插入到我们css中slide附近"><a href="#把源代码中css相关样式部分插入到我们css中slide附近" class="headerlink" title="把源代码中css相关样式部分插入到我们css中slide附近"></a>把源代码中css相关样式部分插入到我们css中slide附近</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">.<span class="property">swiper</span>-container &#123;</span><br><span class="line">     <span class="attr">width</span>: <span class="number">100</span>%;</span><br><span class="line">     <span class="attr">height</span>: <span class="number">100</span>%;</span><br><span class="line">   &#125;</span><br><span class="line">   .<span class="property">swiper</span>-slide &#123;</span><br><span class="line">     text-<span class="attr">align</span>: center;</span><br><span class="line">     font-<span class="attr">size</span>: 18px;</span><br><span class="line">     <span class="attr">background</span>: #fff;</span><br><span class="line"></span><br><span class="line">     <span class="comment">/* Center slide text vertically */</span></span><br><span class="line">     <span class="attr">display</span>: -webkit-box;</span><br><span class="line">     <span class="attr">display</span>: -ms-flexbox;</span><br><span class="line">     <span class="attr">display</span>: -webkit-flex;</span><br><span class="line">     <span class="attr">display</span>: flex;</span><br><span class="line">     -webkit-box-<span class="attr">pack</span>: center;</span><br><span class="line">     -ms-flex-<span class="attr">pack</span>: center;</span><br><span class="line">     -webkit-justify-<span class="attr">content</span>: center;</span><br><span class="line">     justify-<span class="attr">content</span>: center;</span><br><span class="line">     -webkit-box-<span class="attr">align</span>: center;</span><br><span class="line">     -ms-flex-<span class="attr">align</span>: center;</span><br><span class="line">     -webkit-align-<span class="attr">items</span>: center;</span><br><span class="line">     align-<span class="attr">items</span>: center;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h4 id="源代码中js部分-放入到我们自己写的index-js中"><a href="#源代码中js部分-放入到我们自己写的index-js中" class="headerlink" title="源代码中js部分 放入到我们自己写的index.js中"></a>源代码中js部分 放入到我们自己写的index.js中</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;load&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">  &lt;!-- <span class="title class_">Initialize</span> <span class="title class_">Swiper</span> --&gt;</span><br><span class="line">    <span class="keyword">var</span> swiper = <span class="keyword">new</span> <span class="title class_">Swiper</span>(<span class="string">&#x27;.swiper-container&#x27;</span>, &#123;</span><br><span class="line">      <span class="attr">pagination</span>: &#123;</span><br><span class="line">        <span class="attr">el</span>: <span class="string">&#x27;.swiper-pagination&#x27;</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="自定义修改某些参数"><a href="#自定义修改某些参数" class="headerlink" title="自定义修改某些参数"></a>自定义修改某些参数</h4><p>修改小圆点的颜色</p><ul><li><p>f12 点击小圆点 选到出现的类名</p></li><li><p>将类名复制到css 中  修改属性值  </p></li><li><p>可能层级不够 属性值后面加入!important</p></li></ul><h2 id="其他移动端常见插件"><a href="#其他移动端常见插件" class="headerlink" title="其他移动端常见插件"></a>其他移动端常见插件</h2><p>superslide： <a href="http://www.superslide2.com/">http://www.superslide2.com/</a><br>iscroll： <a href="https://github.com/cubiq/iscr">https://github.com/cubiq/iscr</a></p><h2 id="插件的使用总结"><a href="#插件的使用总结" class="headerlink" title="插件的使用总结"></a>插件的使用总结</h2><ol><li>确认插件实现的功能</li><li>去官网查看使用说明</li><li>打开demo实例文件，查看需要引入的相关文件，并且引入</li><li>复制demo实例文件中的结构html，样式css以及js代码</li></ol><h2 id="练习—移动端视频插件-zy-media-j"><a href="#练习—移动端视频插件-zy-media-j" class="headerlink" title="练习—移动端视频插件 zy.media.j"></a>练习—移动端视频插件 zy.media.j</h2><p>H5 给我们提供了 video 标签，但是浏览器的支持情况不同。<br>不同的视频格式文件，我们可以通过source 解决。<br>但是外观样式，还有暂停，播放，全屏等功能我们只能自己写代码解决。<br>这个时候我们可以使用插件方式来制作。</p><blockquote><p> 原生的写法:<code> &lt;video src=&quot;mov.mp4&quot; controls&gt;&lt;/video&gt;</code></p></blockquote><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><blockquote><p> 将css和js文件放到我们自己的文件夹下</p></blockquote><blockquote><p>在index.html中引入插件文件.css和.js<br>注意引入顺序</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;title&gt;<span class="title class_">Document</span>&lt;/title&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;zy.media.min.css&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;zy.media.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure></blockquote><blockquote><p>复制源代码中style</p></blockquote><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;zy.media.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">   <span class="language-xml"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">       <span class="selector-id">#modelView</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">           <span class="attribute">background-color</span>: <span class="number">#DDDDDD</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">           <span class="attribute">z-index</span>: <span class="number">0</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">           <span class="attribute">opacity</span>: <span class="number">0.7</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">           <span class="attribute">height</span>: <span class="number">100%</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">           <span class="attribute">width</span>: <span class="number">100%</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">           <span class="attribute">position</span>: relative;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">       &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">       </span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">       <span class="selector-class">.playvideo</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">           <span class="attribute">padding-top</span>: auto;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">           <span class="attribute">z-index</span>: <span class="number">9999</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">           <span class="attribute">position</span>: relative;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">           <span class="attribute">width</span>: <span class="number">300px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">           <span class="attribute">height</span>: <span class="number">200px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">       &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">       </span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">       <span class="selector-class">.zy_media</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">           <span class="attribute">z-index</span>: <span class="number">999999999</span></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">       &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">   </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure><blockquote><p>在body中引入相关html代码</p></blockquote><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;playvideo&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;zy_media&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">video</span> <span class="attr">data-config</span>=<span class="string">&#x27;&#123;&quot;mediaTitle&quot;: &quot;测试视频--视频&quot;&#125;&#x27;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;你的视频路径.mp4&quot;</span> <span class="attr">type</span>=<span class="string">&quot;video/mp4&quot;</span>&gt;</span></span><br><span class="line">       您的浏览器不支持HTML5视频</span><br><span class="line">   <span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;modelView&quot;</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>引入相关js代码</p></blockquote><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">        <span class="title function_">zymedia</span>(<span class="string">&#x27;video&#x27;</span>, &#123;</span><br><span class="line">            <span class="attr">autoplay</span>: <span class="literal">false</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="移动端常用开发框架"><a href="#移动端常用开发框架" class="headerlink" title="移动端常用开发框架"></a>移动端常用开发框架</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><ol><li><p>框架，顾名思义就是一套架构，它会基于自身的特点向用户提供一套较为完整的解决方案。框架的控制权在框架本身，使用者要按照框架所规定的某种规范进行开发。</p></li><li><p>插件一般是为了解决某个问题而专门存在，其功能单一，并且比较小。</p></li><li><p>前端常用的框架有 Bootstrap、Vue、Angular、React 等。既能开发PC端，也能开发移动端</p></li><li><p>前端常用的移动端插件有 swiper、superslide、iscroll等</p></li><li><p>框架与插件</p></li><li><p>框架： 大而全，一整套解决方案</p></li><li><p>插件： 小而专一，某个功能的解决方案</p></li></ol><h2 id="Bootstrap轮播图效果"><a href="#Bootstrap轮播图效果" class="headerlink" title="Bootstrap轮播图效果"></a>Bootstrap轮播图效果</h2><p>Bootstrap 是一个简洁、直观、强悍的前端开发框架，它让 web 开发更迅速、简单。</p><p>它能开发PC端，也能开发移动端</p><h3 id="Bootstrap-JS插件使用步骤"><a href="#Bootstrap-JS插件使用步骤" class="headerlink" title="Bootstrap JS插件使用步骤"></a>Bootstrap JS插件使用步骤</h3><h4 id="1-引入相关js-文件"><a href="#1-引入相关js-文件" class="headerlink" title="1. 引入相关js 文件"></a>1. 引入相关js 文件</h4><p>下载bootstrap之后有css&#x2F;fonts&#x2F;js整个文件夹放入根目录</p><p>在index.html引入jquery文件<br>bootstrap.js<br>css文件</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;bootstrap/css/bootstrap.min.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;bootstrap/js/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;bootstrap/js/bootstrap.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-复制HTML-结构"><a href="#2-复制HTML-结构" class="headerlink" title="2. 复制HTML 结构"></a>2. 复制HTML 结构</h4><blockquote><p>在 div.focus中加入</p></blockquote><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;carousel-example-generic&quot;</span> <span class="attr">class</span>=<span class="string">&quot;carousel slide&quot;</span> <span class="attr">data-ride</span>=<span class="string">&quot;carousel&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- Indicators --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ol</span> <span class="attr">class</span>=<span class="string">&quot;carousel-indicators&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">data-target</span>=<span class="string">&quot;#carousel-example-generic&quot;</span> <span class="attr">data-slide-to</span>=<span class="string">&quot;0&quot;</span> <span class="attr">class</span>=<span class="string">&quot;active&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">data-target</span>=<span class="string">&quot;#carousel-example-generic&quot;</span> <span class="attr">data-slide-to</span>=<span class="string">&quot;1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">data-target</span>=<span class="string">&quot;#carousel-example-generic&quot;</span> <span class="attr">data-slide-to</span>=<span class="string">&quot;2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- Wrapper for slides --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;carousel-inner&quot;</span> <span class="attr">role</span>=<span class="string">&quot;listbox&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item active&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;...&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;...&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;carousel-caption&quot;</span>&gt;</span></span><br><span class="line">        ...</span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;...&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;...&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;carousel-caption&quot;</span>&gt;</span></span><br><span class="line">        ...</span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- Controls --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;left carousel-control&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#carousel-example-generic&quot;</span> <span class="attr">role</span>=<span class="string">&quot;button&quot;</span> <span class="attr">data-slide</span>=<span class="string">&quot;prev&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;glyphicon glyphicon-chevron-left&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sr-only&quot;</span>&gt;</span>Previous<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;right carousel-control&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#carousel-example-generic&quot;</span> <span class="attr">role</span>=<span class="string">&quot;button&quot;</span> <span class="attr">data-slide</span>=<span class="string">&quot;next&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;glyphicon glyphicon-chevron-right&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sr-only&quot;</span>&gt;</span>Next<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br></pre></td></tr></table></figure><p>这个代码可以在bootstrap :   <a href="https://v3.bootcss.com/javascript/#carousel">https://v3.bootcss.com/javascript/#carousel</a>   找到</p><h4 id="3-修改对应样式"><a href="#3-修改对应样式" class="headerlink" title="3. 修改对应样式"></a>3. 修改对应样式</h4><p>style里面</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.carousel</span>,<span class="selector-tag">img</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">300px</span><span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>需修改图片的长度与宽度</p><h4 id="4-修改相应JS-参数"><a href="#4-修改相应JS-参数" class="headerlink" title="4. 修改相应JS 参数"></a>4. 修改相应JS 参数</h4><p>修改图片播放间隔    (写在&#x2F;body上面  script里面)</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="string">&#x27;.carousel&#x27;</span>).<span class="title function_">carousel</span>(&#123;</span><br><span class="line">  <span class="attr">interval</span>: <span class="number">2000</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="阿里百秀轮播图应用"><a href="#阿里百秀轮播图应用" class="headerlink" title="阿里百秀轮播图应用"></a>阿里百秀轮播图应用</h2><h4 id="文件引入"><a href="#文件引入" class="headerlink" title="文件引入"></a>文件引入</h4><p>注意顺序</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;!-- 引入bootstrap 样式文件 --&gt;</span><br><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;bootstrap/css/bootstrap.min.css&quot;&gt;</span><br><span class="line">&lt;!-- 引入我们自己的首页样式文件 --&gt;</span><br><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;css/index.css&quot;&gt;</span><br><span class="line">&lt;!-- 先引入jquery js文件 --&gt;</span><br><span class="line">&lt;script src=&quot;bootstrap/js/jquery.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;bootstrap/js/bootstrap.min.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="第一个小li里面仿轮播图"><a href="#第一个小li里面仿轮播图" class="headerlink" title="第一个小li里面仿轮播图"></a>第一个小li里面仿轮播图</h3><p>把里面a全部扔掉 插入下面的代码</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;carousel-example-generic&quot;</span> <span class="attr">class</span>=<span class="string">&quot;carousel slide&quot;</span> <span class="attr">data-ride</span>=<span class="string">&quot;carousel&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- Indicators --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ol</span> <span class="attr">class</span>=<span class="string">&quot;carousel-indicators&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">data-target</span>=<span class="string">&quot;#carousel-example-generic&quot;</span> <span class="attr">data-slide-to</span>=<span class="string">&quot;0&quot;</span> <span class="attr">class</span>=<span class="string">&quot;active&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">data-target</span>=<span class="string">&quot;#carousel-example-generic&quot;</span> <span class="attr">data-slide-to</span>=<span class="string">&quot;1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">data-target</span>=<span class="string">&quot;#carousel-example-generic&quot;</span> <span class="attr">data-slide-to</span>=<span class="string">&quot;2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- Wrapper for slides --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;carousel-inner&quot;</span> <span class="attr">role</span>=<span class="string">&quot;listbox&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item active&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;...&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;...&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;carousel-caption&quot;</span>&gt;</span></span><br><span class="line">        ...</span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;...&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;...&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;carousel-caption&quot;</span>&gt;</span></span><br><span class="line">        ...</span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- Controls --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;left carousel-control&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#carousel-example-generic&quot;</span> <span class="attr">role</span>=<span class="string">&quot;button&quot;</span> <span class="attr">data-slide</span>=<span class="string">&quot;prev&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;glyphicon glyphicon-chevron-left&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sr-only&quot;</span>&gt;</span>Previous<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;right carousel-control&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#carousel-example-generic&quot;</span> <span class="attr">role</span>=<span class="string">&quot;button&quot;</span> <span class="attr">data-slide</span>=<span class="string">&quot;next&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;glyphicon glyphicon-chevron-right&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sr-only&quot;</span>&gt;</span>Next<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="根据第一个li-的父元素的高度与宽度-在对应的css后面加上自定义的bootstrap的样式"><a href="#根据第一个li-的父元素的高度与宽度-在对应的css后面加上自定义的bootstrap的样式" class="headerlink" title="根据第一个li 的父元素的高度与宽度  在对应的css后面加上自定义的bootstrap的样式"></a>根据第一个li 的父元素的高度与宽度  在对应的css后面加上自定义的bootstrap的样式</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.news</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child</span>(<span class="number">1</span>) &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">266px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.carousel</span>,</span><br><span class="line"><span class="selector-class">.carousel</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">266px</span><span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="li的子代a-影响了bootstrap里面的a-所以"><a href="#li的子代a-影响了bootstrap里面的a-所以" class="headerlink" title="li的子代a 影响了bootstrap里面的a  所以"></a>li的子代a 影响了bootstrap里面的a  所以</h3><p>原本的.news li a 改为.new li &gt;a </p><p>让我们自己写的a 只限定在自带选择器上  不深入到bootstrp的结构里面, 影响bootstrap里面的a</p><p>让我们自己写的a 只限定在自带选择器上  不深入到bootstrp的结构里面, 影响bootstrap里面的a</p><p>这里的&gt;  是自带选择器的意思 只选择亲儿子  不选择孙子后代….</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.news</span> <span class="selector-tag">li</span>&gt;<span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="每个轮播图里面的标题的样式修改"><a href="#每个轮播图里面的标题的样式修改" class="headerlink" title="每个轮播图里面的标题的样式修改"></a>每个轮播图里面的标题的样式修改</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.carousel-caption</span> &#123;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">41px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">16px</span><span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span><span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.news</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span> <span class="selector-tag">p</span>,</span><br><span class="line"><span class="selector-class">.carousel-caption</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">41px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">5px</span> <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">5</span>);</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="在轮播图html代码后面加上js代码"><a href="#在轮播图html代码后面加上js代码" class="headerlink" title="在轮播图html代码后面加上js代码"></a>在轮播图html代码后面加上js代码</h3><p>调节滚动间隔事件</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="string">&#x27;.carousel&#x27;</span>).<span class="title function_">carousel</span>(&#123;</span><br><span class="line">  <span class="attr">interval</span>: <span class="number">2000</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><div style="text-align:center">---完结撒花---</div><hr>]]></content>
    
    
    <summary type="html">触屏事件, 移动端轮播图 返回顶部 轮播图插件 Bootstrap轮播图..</summary>
    
    
    
    <category term="JavaScript" scheme="http://l1562007999.github.io/categories/JavaScript/"/>
    
    
    <category term="JS" scheme="http://l1562007999.github.io/tags/JS/"/>
    
    <category term="学习" scheme="http://l1562007999.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="移动端特效" scheme="http://l1562007999.github.io/tags/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E7%89%B9%E6%95%88/"/>
    
  </entry>
  
  <entry>
    <title>余音绕梁的故事---The lingering tune</title>
    <link href="http://l1562007999.github.io/2022/04/06/%E4%BD%99%E9%9F%B3%E7%BB%95%E6%A2%81%E7%9A%84%E6%95%85%E4%BA%8B/"/>
    <id>http://l1562007999.github.io/2022/04/06/%E4%BD%99%E9%9F%B3%E7%BB%95%E6%A2%81%E7%9A%84%E6%95%85%E4%BA%8B/</id>
    <published>2022-04-06T11:35:56.000Z</published>
    <updated>2022-04-09T04:44:52.698Z</updated>
    
    <content type="html"><![CDATA[<h1 id="The-lingering-tune—余音绕梁"><a href="#The-lingering-tune—余音绕梁" class="headerlink" title="The lingering tune—余音绕梁"></a>The lingering tune—余音绕梁</h1><p>我国古时有一位善歌者韩娥，韩国人。一次她经过齐国，因路费用尽，便在齐国都城的雍门卖唱筹集资金。韩娥声音清脆嘹亮，婉转悠扬，十分动人。这次演唱，轰动全城。唱完之后，听众还聚在雍门，徘徊留恋，久久不肯散去。有人便到旅店去找韩娥，请她再来演唱。</p><p><img src="http://5b0988e595225.cdn.sohucs.com/images/20180625/73cf1b56f5db4cf8840874ba7e1ca02b.jpeg" alt="img"></p><p>可是旅店老板却对韩娥很不礼貌，韩娥忍不住放声大哭，哭声悲伤凄楚，附近居民，都被感动得流下泪来。由于韩娥的歌声婉转动听，唱完之后两三天，似乎还有遗留的歌声，在屋梁间缭绕飘荡，一连三天，大家都难过得吃不下饭。</p><p><img src="http://5b0988e595225.cdn.sohucs.com/images/20180625/9642fe8034b344be83d5f8ad80197688.jpeg" alt="img"></p><p>当人们听说韩娥已经出城离去时，派人立刻去追，苦苦挽留。韩娥不好拒绝百姓的要求，便回来为大家继续演唱了一次。听众很高兴，几天来的悲伤情绪一扫而空。《列子·汤问》在描写这一情节时说“余音绕梁，三日不绝”。</p><p><img src="http://5b0988e595225.cdn.sohucs.com/images/20180625/4f012fe1617b4d2db9bdc7dce0fc7f4f.jpeg" alt="img"></p><p>从此，人们称赞歌声或音乐的美妙，余音不绝，就常用“余音绕梁”来比喻。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;The-lingering-tune—余音绕梁&quot;&gt;&lt;a href=&quot;#The-lingering-tune—余音绕梁&quot; class=&quot;headerlink&quot; title=&quot;The lingering tune—余音绕梁&quot;&gt;&lt;/a&gt;The lingering tun</summary>
      
    
    
    
    <category term="英语学习" scheme="http://l1562007999.github.io/categories/%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="学习" scheme="http://l1562007999.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="有趣的故事" scheme="http://l1562007999.github.io/tags/%E6%9C%89%E8%B6%A3%E7%9A%84%E6%95%85%E4%BA%8B/"/>
    
  </entry>
  
  <entry>
    <title>Why do we feel nostalgia</title>
    <link href="http://l1562007999.github.io/2022/04/05/Why-do-we-feel-nostalgia/"/>
    <id>http://l1562007999.github.io/2022/04/05/Why-do-we-feel-nostalgia/</id>
    <published>2022-04-05T08:31:47.000Z</published>
    <updated>2022-04-09T04:48:58.704Z</updated>
    
    <content type="html"><![CDATA[<div style="text-align:center;font-size:18px;color:black;font-weight:800">为什么我们会怀念过去</div><div style="max-width:854px"><div style="position:relative;height:0;padding-bottom:56.25%"><iframe src="https://embed.ted.com/talks/lang/en/clay_routledge_why_do_we_feel_nostalgia" width="854" height="480" style="position:absolute;left:0;top:0;width:100%;height:100%" frameborder="0" scrolling="no" allowfullscreen></iframe></div></div> <p>In the late 17th century, a <mark>medical student</mark> named Johannes Hofer noticed a strange illness affecting Swiss mercenaries serving abroad. </p><p>在17世纪末， 一个叫做约翰内斯·霍弗的<mark>医科学生</mark> 注意到了一种奇怪的疾病 （这种疾病）侵袭着在国外工作的瑞士雇佣兵</p><p>Its symptoms, including fatigue, <mark>insomnia</mark>, irregular heartbeat, indigestion, and fever were so strong, the soldiers often had to be <mark>discharged</mark>. </p><p>这种病的发病症状， 包括疲劳、 <mark>失眠</mark>、 不规律的心脏跳动、 消化不良、 以及发高烧， 这些士兵通常不得不<mark>退伍</mark>。</p><p>As Hofer discovered, the cause was not some physical disturbance, but an intense <mark>yearning for</mark> their mountain homeland. </p><p>霍弗发现，他们的病因并非躯体障碍， 而是一种对他们故土的强烈思慕之情。</p><p>He<mark> dubbed</mark> the <u>condition</u> nostalgia, from the Greek “nostos” for homecoming and “algos” for pain or longing. </p><p>他把这种<u>病情</u><mark>称为</mark>思乡病， （这个词）的回家之意 取自希腊语“nostos”， 痛苦和渴望之意取自词语“algos”。</p><p>At first, nostalgia was considered a particularly Swiss <mark>affliction</mark>.</p><p>起初，思乡病被认作是一种只发生在瑞士的<mark>疾病</mark></p><p>Some doctors proposed that the constant sound of cowbells in the <mark>Alps</mark> caused trauma to the ear drums and brain. </p><p>一些医生提出是<mark>阿尔卑斯山</mark>中连续不断的牛铃声 导致了鼓膜和脑部的创伤。</p><p>Commanders even forbade their soldiers from singing traditional Swiss songs for fear that they’d lead to <mark>desertion</mark> or suicide. </p><p>司令们甚至禁止他们的士兵唱传统瑞士歌曲 以防他们指引士兵<mark>擅离军队</mark>或者自杀。</p><p>But as migration increased worldwide, nostalgia was observed in various groups.<br>但是随着移民的全球化，人们注意到 思乡病出现在许多群体中。</p><p>It turned out that anyone separated from their native place for a long time was vulnerable to nostalgia. </p><p>原来，任何离开故土很久的人 都容易患上思乡病。</p><p>And by the early 20th century, professionals no longer viewed it as a neurological disease, but as <mark>a mental condition</mark> similar to depression. </p><p>可是到了20世纪前期， 专家们已不再将它看作一种神经疾病了， 而看作是一种类似于抑郁症的<mark>心理疾病</mark>。</p><p>Psychologists of the time speculated that it represented difficulties letting go of childhood, or even a longing to return to one’s fetal state. </p><p>当时的心理学家推测 它反映了忘掉儿童时代有多困难， 或说甚至是一种对回到某人婴儿时期的渴望。</p><p>But over the next few decades, the understanding of nostalgia changed in two important ways. </p><p>但是在接下来的几十年中， 对思乡病的认知在两个重要的方面发生了变化。</p><p>Its meaning expanded from indicating homesickness to a general longing for the past.</p><p>它的含义从表明思乡之情扩展为 一种对过去的普遍向往。</p><p>And rather than an awful disease, it began to be seen as a <mark>poignant</mark> and pleasant experience. </p><p>而且并非一种令人厌恶的疾病， 它开始被看作是一次<mark>心酸</mark>而又愉快的体验。</p><p>Perhaps the most famous example of this was captured by French author Marcel Proust. </p><p>或许与此有关的出名的实例 要数法国作家马塞尔·普鲁斯特为最了。</p><p>He described how tasting a madeleine cake he had not eaten since childhood triggered a cascade of warm and powerful sensory associations. </p><p>他描述了品尝一块儿自小时候起 再没吃过的玛德琳蛋糕 是怎样触发了他温暖而强烈的感官联想。</p><p>So what caused such a major reversal in our view of nostalgia? </p><p>因此，造成我们对怀旧情结的看法 改变如此之大的原因是什么？</p><p>Part of it has to do with science. </p><p>科技肯定与此有关。</p><p>Psychology shifted away from pure theory and towards more careful and systematic <mark>empirical observation</mark>.</p><p>心理学由纯理论转变为 更谨慎系统的<mark>观察实践</mark>。</p><p>So professionals realized that many of the negative symptoms may have been simply correlated with nostalgia rather than caused by it. </p><p>因此专家们发现很多负面症状可能仅仅是与思乡病有关 可能仅仅是与怀旧情结有关 而非由它引起。</p><p>And, in fact, despite being a complex emotional state that can include feelings of loss and sadness, nostalgia doesn’t generally put people in a negative mood. </p><p>实际上，除了在处于复杂的情感状态时 一个包含着失落与伤心的状态 怀旧情结并不总是使人沉浸在消极情绪中。</p><p>Instead, by allowing individuals to remember personally meaningful and rewarding experiences they shared with others, nostalgia can <mark>boost</mark> psychological well-being. </p><p>恰恰相反，若是允许个体记下就他们个人而言 那些与他人一起的意义非凡而又有益的经历， 那么怀旧情结<mark>有利于</mark>心理健康。</p><p>Studies have shown that inducing nostalgia in people can help increase their feelings of self-esteem and social belonging, encourage psychological growth, and even make them <mark>act more charitably</mark>. </p><p>研究发现引起人们的怀旧情结 有助于提高他们的自尊心和社会归属感， 激励心理成长， 甚至使他们<mark>变得更加仁爱</mark>。</p><p>So rather than being a cause of mental distress, nostalgia can be a restorative way of coping with it. </p><p>因此，并非一个心理痛苦的诱因， 怀旧情结可以是一个帮助恢复的应对办法。</p><p>For instance, when people experience negative emotional states, they tend to naturally use nostalgia to reduce <mark>distress</mark> and restore well-being. </p><p>例如，当人们陷于消极的情绪状态时， 他们倾向于自然而然地回想过去，借此减轻<mark>痛苦</mark> 并恢复健康。</p><p>Today, it seems that nostalgia is everywhere, partially because advertisers have discovered how powerful it is as a <mark>marketing technique</mark>. </p><p>如今，怀旧情结似乎随处可见， 部分原因是广告商发现了它的影响力之大 当它作为一个<mark>市场营销</mark>手段时。</p><p>It’s tempting to think of this as a sign of us <u>being stuck in the past</u>, but that’s not really how nostalgia works. </p><p>人们很容易将怀旧情结看作 一个昭示着我们<u>沉湎过去</u>的信号， 但那并不真的是它的用途。</p><p>Instead, nostalgia helps us remember that our lives can have meaning and value, helping us find the confidence and motivation to face the challenges of the future.</p><p>取而代之的是，怀旧情结帮助我们牢记 我们的生命可以是有意义与价值的， 帮助我们找到信心、寻得动力 来面对未来的挑战。</p>]]></content>
    
    
    <summary type="html">为什么我们会怀念过去</summary>
    
    
    
    <category term="英语学习" scheme="http://l1562007999.github.io/categories/%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="英语" scheme="http://l1562007999.github.io/tags/%E8%8B%B1%E8%AF%AD/"/>
    
    <category term="TED-ED" scheme="http://l1562007999.github.io/tags/TED-ED/"/>
    
  </entry>
  
  <entry>
    <title>JS-PC端网页特效</title>
    <link href="http://l1562007999.github.io/2022/04/04/JS-PC%E7%AB%AF%E7%BD%91%E9%A1%B5%E7%89%B9%E6%95%88/"/>
    <id>http://l1562007999.github.io/2022/04/04/JS-PC%E7%AB%AF%E7%BD%91%E9%A1%B5%E7%89%B9%E6%95%88/</id>
    <published>2022-04-04T09:03:07.000Z</published>
    <updated>2022-04-07T08:32:41.550Z</updated>
    
    <content type="html"><![CDATA[<h1 id="元素偏移量offset系列"><a href="#元素偏移量offset系列" class="headerlink" title="元素偏移量offset系列"></a>元素偏移量offset系列</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><ol><li><p>offset 翻译过来就是偏移量， 我们使用 offset 系列相关属性可以动态的得到该元素的位置（偏移）、大小等。</p></li><li><p>获得元素距离带有定位父元素的位置</p></li><li><p>获得元素自身的大小（宽度高度）</p></li><li><p>注意： 返回的数值都不带单位</p></li></ol><h2 id="常见属性"><a href="#常见属性" class="headerlink" title="常见属性"></a>常见属性</h2><h3 id="element-offset"><a href="#element-offset" class="headerlink" title="element.offset"></a>element.offset</h3><h4 id="Parent"><a href="#Parent" class="headerlink" title="Parent"></a>Parent</h4><p><strong>返回</strong>作为该元素带有定位的<strong>父级元素</strong>, 如果父级都没有定位,则返回body</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(son.<span class="property">offsetParent</span>); <span class="comment">//div father // </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(son.<span class="property">parentNode</span>);  <span class="comment">//返回父亲 是最近一级的父亲 亲爸爸  不管父亲有没有定位</span></span><br></pre></td></tr></table></figure><h4 id="Top"><a href="#Top" class="headerlink" title="Top"></a>Top</h4><p><strong>返回</strong>元素相对带有定位父元素上方的<strong>偏移</strong></p><h4 id="Left"><a href="#Left" class="headerlink" title="Left"></a>Left</h4><p><strong>返回</strong>元素相对带有定位父元素左边框的<strong>偏移</strong></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> father = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.father&#x27;</span>);</span><br><span class="line">    <span class="keyword">var</span> son =<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.son&#x27;</span>);</span><br><span class="line">    <span class="comment">// 可以得到元素的偏移位置 返回不带单位的数值</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(father.<span class="property">offsetTop</span>); <span class="comment">//150</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(father.<span class="property">offsetLeft</span>); <span class="comment">//150</span></span><br><span class="line">    <span class="comment">//它以带有定位的父亲为准  如果没有父亲或者父亲没有定位 则以 body为准</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(son.<span class="property">offsetLeft</span>);  <span class="comment">// 45</span></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="Width"><a href="#Width" class="headerlink" title="Width"></a>Width</h4><p>返回<strong>自身</strong>包括paddind,边框,内容区<strong>的宽度</strong>, 返回值不带单位</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(w.<span class="property">offsetWidth</span>);  <span class="comment">//动态获取宽度</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(w.<span class="property">offsetHeight</span>);  <span class="comment">//动态获取高度</span></span><br></pre></td></tr></table></figure><h4 id="Height"><a href="#Height" class="headerlink" title="Height"></a>Height</h4><p>返回<strong>自身</strong>包括padding, 边框, 内容区的<strong>高度</strong>, 返回数值不带单位</p><h3 id="offset与style的区别"><a href="#offset与style的区别" class="headerlink" title="offset与style的区别"></a>offset与style的区别</h3><h4 id="offset"><a href="#offset" class="headerlink" title="offset"></a>offset</h4><ol><li><p>offset 可以得到任意样式表中的样式值</p></li><li><p>offset 系列获得的数值是没有单位的</p></li><li><p>offsetWidth 包含padding+border+width</p></li><li><p>offsetWidth 等属性是只读属性，只能获取不能赋值</p></li><li><p><strong>所以，我们想要获取元素大小位置，用offset更合适</strong></p></li></ol><h4 id="style"><a href="#style" class="headerlink" title="style"></a>style</h4><ol><li>style 只能得到行内样式表中的样式值</li><li>style.width 获得的是带有单位的字符串</li><li>style.width 获得不包含padding和border 的值</li><li>style.width 是可读写属性，可以获取也可以赋值</li><li>所以，我们想要给元素更改值，则需要用style改变</li></ol><h2 id="案例-获取鼠标在盒子内的坐标"><a href="#案例-获取鼠标在盒子内的坐标" class="headerlink" title="案例:获取鼠标在盒子内的坐标"></a>案例:获取鼠标在盒子内的坐标</h2><blockquote><p>分析</p></blockquote><p>我们在盒子内点击，想要得到鼠标距离盒子左右的距离。<br>② 首先得到鼠标在页面中的坐标（e.pageX, e.pageY）<br>③ 其次得到盒子在页面中的距离 ( box.offsetLeft, box.offsetTop)<br>④ 用鼠标距离页面的坐标减去盒子在页面中的距离，得到 鼠标在盒子内的坐标<br>⑤ 如果想要移动一下鼠标，就要获取最新的坐标，使用鼠标移动事件 mousemove</p><h2 id="案例-模态框拖拽"><a href="#案例-模态框拖拽" class="headerlink" title="案例:模态框拖拽"></a>案例:模态框拖拽</h2><p>弹出框，我们也称为模态框。</p><blockquote><p>要求</p></blockquote><ol><li>点击弹出层， 会弹出模态框， 并且显示灰色半透明的遮挡层。</li><li>点击关闭按钮，可以关闭模态框，并且同时关闭灰色半透明遮挡层。</li><li>鼠标放到模态框最上面一行，可以按住鼠标拖拽模态框在页面中移动。</li><li>鼠标松开，可以停止拖动模态框移动。</li></ol><blockquote><p>分析</p></blockquote><p>① 点击弹出层， 模态框和遮挡层就会显示出来 display:block;<br>② 点击关闭按钮，模态框和遮挡层就会隐藏起来 display:none;<br>③ 在页面中拖拽的原理： 鼠标按下并且移动， 之后松开鼠标<br>④ 触发事件是鼠标按下 mousedown， 鼠标移动mousemove 鼠标松开 mouseup<br>⑤ 拖拽过程: 鼠标移动过程中，获得最新的值赋值给模态框的left和top值， 这样模态框可以跟着鼠标走了<br>⑥ 鼠标按下触发的事件源是 最上面一行，就是 id 为 title<br>⑦ 鼠标的页面坐标 减去 鼠标在盒子内的坐标， 才是模态框真正的位置。<br>⑧ 鼠标按下，我们要得到鼠标在盒子内的坐标。<br>⑨ 鼠标移动，就让模态框的坐标 设置为 ： 鼠标页面坐标 减去鼠标在盒子内的坐标即可，注意移动事件写到按下事件里面。<br>⑩ 鼠标松开，就停止拖拽，就是可以让鼠标移动事件解除</p><h2 id="仿京东商品放大镜效果"><a href="#仿京东商品放大镜效果" class="headerlink" title="仿京东商品放大镜效果"></a>仿京东商品放大镜效果</h2><blockquote><p>分析</p></blockquote><ol><li></li></ol><p>① 整个案例可以分为三个功能模块<br>② 鼠标经过小图片盒子， 黄色的遮挡层 和 大图片盒子显示，离开隐藏2个盒子功能<br>③ 黄色的遮挡层跟随鼠标功能。<br>④ 移动黄色遮挡层，大图片跟随移动功能。</p><ol start="2"><li></li></ol><p>① 鼠标经过小图片盒子， 黄色的遮挡层 和 大图片盒子显示，离开隐藏2个盒子功能<br>② 就是显示与隐藏</p><ol start="3"><li></li></ol><p>① 黄色的遮挡层跟随鼠标功能。<br>② 把鼠标坐标给遮挡层不合适。因为遮挡层坐标以父盒子为准。<br>③ 首先是获得鼠标在盒子的坐标。<br>④ 之后把数值给遮挡层做为left 和top值。<br>⑤ 此时用到鼠标移动事件，但是还是在小图片盒子内移动。<br>⑥ 发现，遮挡层位置不对，需要再减去盒子自身高度和宽度的一半。<br>⑦ 遮挡层不能超出小图片盒子范围。<br>⑧ 如果小于零，就把坐标设置为0<br>⑨ 如果大于遮挡层最大的移动距离，就把坐标设置为最大的移动距离<br>⑩ 遮挡层的最大移动距离： 小图片盒子宽度 减去 遮挡层盒子宽度</p><ol start="4"><li></li></ol><p>① 移动黄色遮挡层，大图片跟随移动<br>① 移动黄色遮挡层，大图片跟随移动功能。<br>② 求大图片的移动距离公<br>大图片移动距离  &#x3D;  遮挡层移动距离*大图片最大移动距离&#x2F;遮挡层最大移动距离</p><h1 id="元素可视区client系列"><a href="#元素可视区client系列" class="headerlink" title="元素可视区client系列"></a>元素可视区client系列</h1><h2 id="概述-1"><a href="#概述-1" class="headerlink" title="概述"></a>概述</h2><p>client 翻译过来就是客户端，我们使用 client 系列的相关属性来获取元素可视区的相关信息。通过 client 系列的相关属性可以动态的得到该元素的边框大小、元素大小等</p><h2 id="常见属性-element-client"><a href="#常见属性-element-client" class="headerlink" title="常见属性: element.client"></a>常见属性: element.client</h2><ol><li><p>element.clientTop</p><p>返回元素上边框的大小</p></li><li><p>element.clientLeft</p><p>返回元素左边框的大小</p></li><li><p>element.clientWidth</p><p>返回自身padding加上内容区的宽度,不含边框, 返回数值不带单位</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> div= <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//client 宽度 和我们offsetWidth最大的区别就是 不包含边框</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(div.<span class="property">clientWidth</span>); <span class="comment">// 200  不包含边框 包含padding</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>element.clientHeight</p><p>返回自身padding 加上内容区的高度,不含边框, 返回数值不带单位</p></li></ol><h2 id="案例-淘宝flexible-js源码分析"><a href="#案例-淘宝flexible-js源码分析" class="headerlink" title="案例:淘宝flexible.js源码分析"></a>案例:淘宝flexible.js源码分析</h2><h3 id="立即执行函数"><a href="#立即执行函数" class="headerlink" title="立即执行函数"></a>立即执行函数</h3><p>不需要调用，立马能够自己执行的函数<br>主要作用:创建一个独立的作用域   避免了命名冲突问题</p><blockquote><p>有两种写法  第二个小括号可以看做是调用函数</p></blockquote><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"> <span class="comment">// 两个小括号  一个括号内写函数, 一个内不屑</span></span><br><span class="line">(<span class="keyword">function</span>(<span class="params"><span class="string">&#x27;形参1&#x27;</span>,<span class="string">&#x27;形参2&#x27;</span></span>)&#123;&#125;)       (参数<span class="number">1</span>,参数<span class="number">2.</span>..)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 一个小括号呢内 写一个函数   再写一个小括号</span></span><br><span class="line"> ( <span class="keyword">function</span>(<span class="params"><span class="string">&#x27;形参1&#x27;</span>,<span class="string">&#x27;形参2&#x27;</span></span>)&#123;&#125;   (参数<span class="number">1</span>,参数<span class="number">2.</span>..)    )</span><br></pre></td></tr></table></figure><blockquote><p>代码</p></blockquote><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// 1.立即执行函数: 不需要调用，立马能够自己执行的函数</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">fn</span>();</span><br><span class="line">    <span class="comment">// 2. 写法 也可以传递参数进来</span></span><br><span class="line">    <span class="comment">// 1.(function() &#123;&#125;)()    或者  2. (function()&#123;&#125;());</span></span><br><span class="line">    (<span class="keyword">function</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(a + b); <span class="comment">//3</span></span><br><span class="line">        <span class="keyword">var</span> num = <span class="number">10</span>;</span><br><span class="line">    &#125;)(<span class="number">1</span>, <span class="number">2</span>); <span class="comment">// 第二个小括号可以看做是调用函数   有多个立即执行函数 要用分号隔开</span></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    (<span class="keyword">function</span> <span class="title function_">sum</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(a + b); <span class="comment">//5</span></span><br><span class="line">        <span class="keyword">var</span> num = <span class="number">10</span>; <span class="comment">// 局部变量</span></span><br><span class="line">    &#125;(<span class="number">2</span>, <span class="number">3</span>));</span><br><span class="line">    <span class="comment">// 3. 立即执行函数最大的作用就是 独立创建了一个作用域, 里面所有的变量都是局部变量 不会有命名冲突的情况</span></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p> <strong>立即执行函数最大的作用就是 独立创建了一个作用域, 里面所有的变量都是局部变量 不会有命名冲突的情况</strong></p><blockquote><p>注意</p></blockquote><p>下面三种情况都会刷新页面都会触发 load 事件。</p><ol><li><p>a标签的超链接</p></li><li><p>F5或者刷新按钮（强制刷新）</p></li><li><p>前进后退按钮</p></li><li><p>但是 火狐中，有个特点，有个“往返缓存”，这个缓存中不仅保存着页面数据，还保存了DOM和JavaScript的状态；实际上是将整个页面都保存在了内存里。<br>  所以此时后退按钮不能刷新页面。此时可以使用 pageshow事件来触发。</p></li></ol><p>  这个事件在页面显示时触发，无论页面是否来自缓存。在重新加载页面中，pageshow会在load事件触发后触发；根据事件对象中的persisted来判断是否是缓存中的页面触发的pageshow事件，注意这个事件给window添加。</p><p><code>window.pageshow</code></p><h1 id="元素滚动scroll系列"><a href="#元素滚动scroll系列" class="headerlink" title="元素滚动scroll系列"></a>元素滚动scroll系列</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>scroll 翻译过来就是滚动的，我们使用 scroll 系列的相关属性可以动态的得到该元素的大小、滚动距离等。</p><h2 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h2><ol><li><p>element.scrollTop</p><p>被卷去的上侧距离, 返回数值不带单位</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// scroll 系列</span></span><br><span class="line">    <span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(div.<span class="property">scrollHeight</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(div.<span class="property">clientHeight</span>);</span><br><span class="line">    <span class="comment">// scroll滚动事件当我们滚动条发生变化会触发的事件</span></span><br><span class="line">    div.<span class="title function_">addEventListener</span>(<span class="string">&#x27;scroll&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(div.<span class="property">scrollTop</span>);</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>element.scrollLeft</p><p>返回被卷去的左侧的距离, 返回数值不带单位</p></li><li><p>element.scrollWidth</p><p>返回自身实际的宽度, 不含边框, 返回值不带单位</p></li><li><p>element.scrollHeight</p><p>返回自身实际高度, 不含边框, 返回值不带单位</p></li></ol><h2 id="scroll事件"><a href="#scroll事件" class="headerlink" title="scroll事件"></a>scroll事件</h2><p>如果浏览器的高（或宽）度不足以显示整个页面时，会自动出现滚动条。当滚动条向下滚动时，</p><p>页面上面被隐藏掉的高度，我们就称为页面被卷去的头部。滚动条在滚动时会触发 onscroll 事件。</p><h2 id="案例-仿淘宝固定侧边栏"><a href="#案例-仿淘宝固定侧边栏" class="headerlink" title="案例: 仿淘宝固定侧边栏"></a>案例: 仿淘宝固定侧边栏</h2><blockquote><p>要求</p></blockquote><ol><li><p>原先侧边栏是绝对定位</p></li><li><p>当页面滚动到一定位置，侧边栏改为固定定位</p></li><li><p>页面继续滚动，会让 返回顶部显示出来</p></li></ol><blockquote><p>分析</p></blockquote><p>① 需要用到页面滚动事件 scroll 因为是页面滚动，所以事件源是 document<br>② 滚动到某个位置，就是判断页面被卷去的上部值。<br>③ 页面被卷去的头部：可以通过window.pageYOffset 获得 如果是被卷去的左侧 window.pageXOffset<br>④ 注意: <strong>元素被卷去的头部是 element.scrollTop</strong> , 如果是<strong>页面被卷去的头部 则是 window.pageYOffset</strong><br>⑤ 其实这个值 可以通过盒子的 offsetTop 可以得到，如果大于等于这个值，就可以让盒子固定定位了</p><h1 id="三大系列的总结"><a href="#三大系列的总结" class="headerlink" title="三大系列的总结"></a>三大系列的总结</h1><h2 id="element-offsetWidth"><a href="#element-offsetWidth" class="headerlink" title="element.offsetWidth"></a>element.offsetWidth</h2><p>返回自身包括padding  边框  内容区的宽度   返回数值不带单位</p><h2 id="element-clientWidth"><a href="#element-clientWidth" class="headerlink" title="element.clientWidth"></a>element.clientWidth</h2><p>返回自身包括padding,  内容区的宽度,  不含边框  返回数值不带单位</p><h2 id="element-scrollWidth"><a href="#element-scrollWidth" class="headerlink" title="element.scrollWidth"></a>element.scrollWidth</h2><p>返回自身实际的宽度(包括溢出),  不含边框  返回数值不带单位</p><h2 id="他们的主要用法"><a href="#他们的主要用法" class="headerlink" title="他们的主要用法"></a>他们的主要用法</h2><blockquote><p>offset系列 经常用于获取元素位置</p></blockquote><p><code>offsetLeft offsetTop</code></p><blockquote><p>client系列经常用于获取元素的宽高</p></blockquote><p><code>clientWidth  clientHeight</code></p><blockquote><p>scroll经常用于获取滚动距离</p></blockquote><p><code>scrollTop scrollLeft</code></p><p>注意: </p><p>页面滚动的距离通过: <code>window.pageXOffset</code></p><h1 id="mouseenter与mouseover的区别"><a href="#mouseenter与mouseover的区别" class="headerlink" title="mouseenter与mouseover的区别"></a>mouseenter与mouseover的区别</h1><h2 id="mouseover-一般用这个"><a href="#mouseover-一般用这个" class="headerlink" title="mouseover(一般用这个)"></a>mouseover(一般用这个)</h2><ul><li>从一个元素到这个元素 就会触发这个事件</li><li>从子盒子移动到父盒子会触发</li><li>从外面 移动到父盒子会触发</li><li>子盒子虽然没有设置鼠标经过事件 但是子盒子得到了鼠标经过事件  通过冒泡 传递给了设置了鼠标经过事件的父盒子  所以…</li></ul><h2 id="moseenter"><a href="#moseenter" class="headerlink" title="moseenter"></a>moseenter</h2><ul><li>只有鼠标从外面移入这个盒子下出发</li><li>从里面的子盒子移入到这个盒子   不会触发</li></ul><h2 id="mouseenter不会冒泡"><a href="#mouseenter不会冒泡" class="headerlink" title="mouseenter不会冒泡"></a>mouseenter不会冒泡</h2><p>跟mouseenter想对相应的 鼠标离开  mouseleave 同样不会冒泡</p><h1 id="动画函数封装"><a href="#动画函数封装" class="headerlink" title="动画函数封装"></a>动画函数封装</h1><h2 id="动画原理"><a href="#动画原理" class="headerlink" title="动画原理"></a>动画原理</h2><h3 id="核心原理"><a href="#核心原理" class="headerlink" title="核心原理"></a>核心原理</h3><p>通过定时器 setInterval() 不断移动盒子位置</p><h3 id="实现步骤"><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h3><ol><li>获得盒子当前位置</li><li>让盒子在当前位置加上1个移动距离</li><li>利用定时器不断重复这个操作</li><li>加一个结束定时器的条件</li><li>注意此元素需要添加定位，才能使用element.style.left</li></ol><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> timer = <span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (div.<span class="property">offsetLeft</span> &gt;= <span class="number">400</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 停止动画  本质是停止定时器</span></span></span><br><span class="line"><span class="language-javascript">            <span class="built_in">clearInterval</span>(timer);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        div.<span class="property">style</span>.<span class="property">left</span> = div.<span class="property">offsetLeft</span> + <span class="number">5</span> + <span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;, <span class="number">30</span>)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    <span class="selector-tag">div</span> &#123;</span><br><span class="line">        <span class="attribute">position</span>: absolute;</span><br><span class="line">        <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">        <span class="attribute">background-color</span>: pink;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="简单动画函数的封装"><a href="#简单动画函数的封装" class="headerlink" title="简单动画函数的封装"></a>简单动画函数的封装</h2><blockquote><p>注意函数需要传递2个参数，动画对象和移动到的距离。</p></blockquote><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">//简单封装函数  obj目标对象  target 目标位置</span></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">animation</span>(<span class="params">obj, target</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> timer = <span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (obj.<span class="property">offsetLeft</span> &gt;= target) &#123;</span><br><span class="line">                <span class="comment">// 停止动画  本质是停止定时器</span></span><br><span class="line">                <span class="built_in">clearInterval</span>(timer);</span><br><span class="line">            &#125;</span><br><span class="line">            obj.<span class="property">style</span>.<span class="property">left</span> = obj.<span class="property">offsetLeft</span> + <span class="number">5</span> + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">        &#125;, <span class="number">50</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">    <span class="keyword">var</span> span = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;span&#x27;</span>);</span><br><span class="line">    <span class="title function_">animation</span>(div, <span class="number">300</span>);</span><br><span class="line">    <span class="title function_">animation</span>(span, <span class="number">400</span>)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="动画函数给不同元素记录不同定时器-性能优化"><a href="#动画函数给不同元素记录不同定时器-性能优化" class="headerlink" title="动画函数给不同元素记录不同定时器(性能优化)"></a>动画函数给不同元素记录不同定时器(性能优化)</h2><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>问题:   如果多个元素都使用这个动画函数，每次都要var 声明定时器, 会浪费内存。<br>我们可以给不同的元素使用不同的定时器（自己专门用自己的定时器）。</p><h3 id="核心原理-1"><a href="#核心原理-1" class="headerlink" title="核心原理"></a>核心原理</h3><p>利用JS是一门动态语言, 可以很方便得给当前对象添加属性</p><h3 id="优化一-将var-timer-改为-obj-timer"><a href="#优化一-将var-timer-改为-obj-timer" class="headerlink" title="优化一: 将var timer  改为  obj.timer"></a>优化一: 将var timer  改为  obj.timer</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">//简单封装函数  obj目标对象  target 目标位置</span></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">animation</span>(<span class="params">obj, target</span>) &#123;</span><br><span class="line">        obj.<span class="property">timer</span> = <span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (obj.<span class="property">offsetLeft</span> &gt;= target) &#123;</span><br><span class="line">                <span class="comment">// 停止动画  本质是停止定时器</span></span><br><span class="line">                <span class="built_in">clearInterval</span>(timer);</span><br><span class="line">            &#125;</span><br><span class="line">            obj.<span class="property">style</span>.<span class="property">left</span> = obj.<span class="property">offsetLeft</span> + <span class="number">5</span> + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">        &#125;, <span class="number">50</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">    <span class="keyword">var</span> span = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;span&#x27;</span>);</span><br><span class="line">    <span class="title function_">animation</span>(div, <span class="number">300</span>);</span><br><span class="line">    <span class="title function_">animation</span>(span, <span class="number">400</span>)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="优化二-防止多个定时器叠加"><a href="#优化二-防止多个定时器叠加" class="headerlink" title="优化二: 防止多个定时器叠加"></a>优化二: 防止多个定时器叠加</h3><p>点击事件触发后  先清除当前的定时器 再执行新的定时器, 防止多个定时器叠加</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">//给不同得元素指定了不同得定时器</span></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">animation</span>(<span class="params">obj, target</span>) &#123;</span><br><span class="line">        <span class="built_in">clearInterval</span>(obj.<span class="property">timer</span>);  <span class="comment">//清除上一个相同的定时器 防止多次点击出现多个相同的定时器</span></span><br><span class="line">        obj.<span class="property">timer</span> = <span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;  <span class="comment">// 将这里得var timer  改为obj.timer</span></span><br><span class="line">            <span class="keyword">if</span> (obj.<span class="property">offsetLeft</span> &gt;= target) &#123;</span><br><span class="line">                <span class="comment">// 停止动画  本质是停止定时器</span></span><br><span class="line">                <span class="built_in">clearInterval</span>(obj.<span class="property">timer</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            obj.<span class="property">style</span>.<span class="property">left</span> = obj.<span class="property">offsetLeft</span> + <span class="number">5</span> + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">        &#125;, <span class="number">50</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">    <span class="keyword">var</span> span = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;span&#x27;</span>);</span><br><span class="line">    <span class="keyword">var</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;button&#x27;</span>);</span><br><span class="line">    <span class="title function_">animation</span>(div, <span class="number">300</span>);</span><br><span class="line">    <span class="comment">// 当我们不断点击按钮,  这个元素得速度会越来越快, 因为开启了太多得定时器</span></span><br><span class="line">    <span class="comment">// 解决方案就是:  让我们元素只有一个定时器执行</span></span><br><span class="line">    <span class="comment">// 先清除以前的定时器, 只保留当前的一个定时器执行;</span></span><br><span class="line">    btn.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="title function_">animation</span>(span, <span class="number">400</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="缓动动画原理"><a href="#缓动动画原理" class="headerlink" title="缓动动画原理"></a>缓动动画原理</h2><p>缓动动画就是让元素运动速度有所变化，最常见的是让速度慢慢停下来</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><ol><li>让盒子每次移动的距离慢慢变小，速度就会慢慢落下来。</li><li>核心算法： (目标值 - 现在的位置(offsetLeft) ) &#x2F; 10 做为每次移动的距离 步长</li><li>停止的条件是： 让当前盒子位置等于目标位置就停止定时器 </li><li>注意步长值需要取整   &#x2F;&#x2F; Math.ceil( step )</li></ol><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;button&gt;点击夏雨荷才走&lt;/button&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">span</span>&gt;</span>夏雨荷<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">//给不同得元素指定了不同得定时器</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">function</span> <span class="title function_">animate</span>(<span class="params">obj, target</span>) &#123;  <span class="comment">// 传入要移动的目标元素, 移动的目标位置offsetLeft</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="built_in">clearInterval</span>(obj.<span class="property">timer</span>);  <span class="comment">//清除上一个相同的定时器 防止多次点击出现多个相同的定时器</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        obj.<span class="property">timer</span> = <span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;  <span class="comment">// 将这里得var timer  改为obj.timer</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="comment">//步长值写到定时器里面</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="comment">//盒子达不到指定位置 涉及到小数除法   把我们的步长值改为整数 不要出现小数 往大取整 Math.ceil() 到达500px</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">var</span> step = <span class="title class_">Math</span>.<span class="title function_">ceil</span>((target - obj.<span class="property">offsetLeft</span>) / <span class="number">10</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">if</span> (obj.<span class="property">offsetLeft</span> == target) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="comment">// 停止动画  本质是停止定时器</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="built_in">clearInterval</span>(obj.<span class="property">timer</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            obj.<span class="property">style</span>.<span class="property">left</span> = obj.<span class="property">offsetLeft</span> + step + <span class="string">&#x27;px&#x27;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;, <span class="number">15</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">var</span> span = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;span&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">var</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;button&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// 当我们不断点击按钮,  这个元素得速度会越来越快, 因为开启了太多得定时器</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// 解决方案就是:  让我们元素只有一个定时器执行</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// 先清除以前的定时器, 只保留当前的一个定时器执行;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    btn.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title function_">animate</span>(span, <span class="number">500</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">//匀速动画 就是 盒子是当前的位置 + 固定的值</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">//缓动动画  盒子当前的位置 + 变化的值( (目标值 - 现在的位置)/ 10   )</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">animate</span>(div, <span class="number">500</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="缓动动画多个目标值之间移动"><a href="#缓动动画多个目标值之间移动" class="headerlink" title="缓动动画多个目标值之间移动"></a>缓动动画多个目标值之间移动</h3><blockquote><p>一定要判断  步长值的正负</p></blockquote><p>正着就往大取整<br>倒着走就往小的取整</p><p>可以让动画函数从 800 移动到 500。<br>当我们点击按钮时候，判断步长是正值还是负值</p><ol><li>如果是正值，则步长 往大了取整</li><li>如果是负值，则步长 向小了取整</li></ol><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// var step = Math.ceil((target - obj.offsetLeft) / 10)   //正着走取整</span></span><br><span class="line">                <span class="keyword">var</span> step = (target - obj.<span class="property">offsetLeft</span>) / <span class="number">10</span></span><br><span class="line">                step = step &gt; <span class="number">0</span>? <span class="title class_">Math</span>.<span class="title function_">ceil</span>(step):<span class="title class_">Math</span>.<span class="title function_">floor</span>(step) <span class="comment">// 正着走还是倒着走</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn500&quot;</span>&gt;</span>点击夏雨荷到500<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn800&quot;</span>&gt;</span>点击夏雨荷到800<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>夏雨荷<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//给不同得元素指定了不同得定时器</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">animate</span>(<span class="params">obj, target</span>) &#123;  <span class="comment">// 传入要移动的目标元素, 移动的目标位置offsetLeft</span></span></span><br><span class="line"><span class="language-javascript">        <span class="built_in">clearInterval</span>(obj.<span class="property">timer</span>);  <span class="comment">//清除上一个相同的定时器 防止多次点击出现多个相同的定时器</span></span></span><br><span class="line"><span class="language-javascript">        obj.<span class="property">timer</span> = <span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;  <span class="comment">// 将这里得var timer  改为obj.timer</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//步长值写到定时器里面</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//盒子达不到指定位置 涉及到小数除法   把我们的步长值改为整数 不要出现小数 往大取整 Math.ceil() 到达500px</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// -8.1 往小取-9</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// var step = Math.ceil((target - obj.offsetLeft) / 10)</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> step = (target - obj.<span class="property">offsetLeft</span>) / <span class="number">10</span></span></span><br><span class="line"><span class="language-javascript">            step = step &gt; <span class="number">0</span>? <span class="title class_">Math</span>.<span class="title function_">ceil</span>(step):<span class="title class_">Math</span>.<span class="title function_">floor</span>(step) <span class="comment">// 正着走还是倒着走</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (obj.<span class="property">offsetLeft</span> == target) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 停止动画  本质是停止定时器</span></span></span><br><span class="line"><span class="language-javascript">                <span class="built_in">clearInterval</span>(obj.<span class="property">timer</span>);</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            obj.<span class="property">style</span>.<span class="property">left</span> = obj.<span class="property">offsetLeft</span> + step + <span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;, <span class="number">15</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> span = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;span&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> btn500 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.btn500&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> btn800 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.btn800&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 当我们不断点击按钮,  这个元素得速度会越来越快, 因为开启了太多得定时器</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 解决方案就是:  让我们元素只有一个定时器执行</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 先清除以前的定时器, 只保留当前的一个定时器执行;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    btn500.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">animate</span>(span, <span class="number">500</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">    btn800.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">animate</span>(span, <span class="number">800</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//匀速动画 就是 盒子是当前的位置 + 固定的值</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//缓动动画  盒子当前的位置 + 变化的值( (目标值 - 现在的位置)/ 10   )</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">animate</span>(div, <span class="number">500</span>)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="动画函数添加回调函数"><a href="#动画函数添加回调函数" class="headerlink" title="动画函数添加回调函数"></a>动画函数添加回调函数</h2><h3 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h3><p>等动画结束之后  我们可以做什么!</p><h3 id="回调函数"><a href="#回调函数" class="headerlink" title="回调函数"></a>回调函数</h3><p>回调函数原理：函数可以作为一个参数。将这个函数作为参数传到另一个函数里面，当那个函数执行完之后，再执行传进去的这个函数，这个过程就叫做回调。</p><h3 id="回调函数写的位置："><a href="#回调函数写的位置：" class="headerlink" title="回调函数写的位置："></a>回调函数写的位置：</h3><blockquote><p>定时器结束的位置。</p></blockquote><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn500&quot;</span>&gt;</span>点击夏雨荷到500<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn800&quot;</span>&gt;</span>点击夏雨荷到800<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>夏雨荷<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">animate</span>(<span class="params">obj, target, callback</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(callback); <span class="comment">//callback = function () &#123;&#125; 调用的时候 callback()</span></span></span><br><span class="line"><span class="language-javascript">        <span class="built_in">clearInterval</span>(obj.<span class="property">timer</span>);</span></span><br><span class="line"><span class="language-javascript">        obj.<span class="property">timer</span> = <span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> step = (target - obj.<span class="property">offsetLeft</span>) / <span class="number">10</span></span></span><br><span class="line"><span class="language-javascript">            step = step &gt; <span class="number">0</span> ? <span class="title class_">Math</span>.<span class="title function_">ceil</span>(step) : <span class="title class_">Math</span>.<span class="title function_">floor</span>(step)</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (obj.<span class="property">offsetLeft</span> == target) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="built_in">clearInterval</span>(obj.<span class="property">timer</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">if</span> (callback) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="title function_">callback</span>();</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            obj.<span class="property">style</span>.<span class="property">left</span> = obj.<span class="property">offsetLeft</span> + step + <span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;, <span class="number">15</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> span = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;span&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> btn500 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.btn500&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> btn800 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.btn800&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    btn500.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">animate</span>(span, <span class="number">500</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">    btn800.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">animate</span>(span, <span class="number">800</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// alert(&#x27;你好吗?&#x27;)</span></span></span><br><span class="line"><span class="language-javascript">            span.<span class="property">style</span>.<span class="property">backgroundColor</span> = <span class="string">&#x27;red&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="动画函数封装到单独JS文件里面"><a href="#动画函数封装到单独JS文件里面" class="headerlink" title="动画函数封装到单独JS文件里面"></a>动画函数封装到单独JS文件里面</h2><p>因为以后经常使用这个动画函数，可以单独封装到一个JS文件里面，使用的时候引用这个JS文件即可。</p><ol><li>单独新建一个JS文件。</li><li>HTML文件引入 JS 文件</li></ol><h2 id="引用animate动画函数"><a href="#引用animate动画函数" class="headerlink" title="引用animate动画函数"></a>引用animate动画函数</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">//1.获取元素</span></span><br><span class="line">    <span class="keyword">var</span> sliderbar = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.sliderbar&#x27;</span>);</span><br><span class="line">    <span class="keyword">var</span> con = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.con&#x27;</span>);</span><br><span class="line">    sliderbar.<span class="title function_">addEventListener</span>(<span class="string">&#x27;mouseenter&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="title function_">animate</span>(con, -<span class="number">160</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">            <span class="comment">//当我们动画执行完毕 就把左箭头改为右箭头</span></span><br><span class="line">            sliderbar.<span class="property">children</span>[<span class="number">0</span>].<span class="property">innerHTML</span> = <span class="string">&#x27;➡&#x27;</span>;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">    sliderbar.<span class="title function_">addEventListener</span>(<span class="string">&#x27;mouseleave&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="title function_">animate</span>(con, <span class="number">0</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">            <span class="comment">//当我们动画执行完毕 就把左箭头改为右箭头</span></span><br><span class="line">            sliderbar.<span class="property">children</span>[<span class="number">0</span>].<span class="property">innerHTML</span> = <span class="string">&#x27;⬅&#x27;</span>;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h1 id="常见的网页特效"><a href="#常见的网页特效" class="headerlink" title="常见的网页特效"></a>常见的网页特效</h1><h2 id="网页轮播图"><a href="#网页轮播图" class="headerlink" title="网页轮播图"></a>网页轮播图</h2><h3 id="要求"><a href="#要求" class="headerlink" title="要求"></a>要求</h3><p>轮播图也称为焦点图，是网页中比较常见的网页特效</p><h3 id="功能要求"><a href="#功能要求" class="headerlink" title="功能要求"></a>功能要求</h3><ol><li>鼠标经过轮播图模块，左右按钮显示，离开隐藏左右按钮。</li><li>点击右侧按钮一次，图片往左播放一张，以此类推， 左侧按钮同理。</li><li>图片播放的同时，下面小圆圈模块跟随一起变化。</li><li>点击小圆圈，可以播放相应图片。</li><li>鼠标不经过轮播图， 轮播图也会自动播放图片。</li><li>鼠标经过，轮播图模块， 自动播放停止</li></ol><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><ol><li>鼠标经过轮播图模块，左右按钮显示，离开隐藏左右按钮。</li><li>点击右侧按钮一次，图片往左播放一张，以此类推， 左侧按钮同理。</li><li>图片播放的同时，下面小圆圈模块跟随一起变化。</li><li>点击小圆圈，可以播放相应图片。</li><li>鼠标不经过轮播图， 轮播图也会自动播放图片。</li><li>鼠标经过，轮播图模块， 自动播放停止</li></ol><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><h4 id="轮播图要用ul-的li-每个li包含一个a链接的图片"><a href="#轮播图要用ul-的li-每个li包含一个a链接的图片" class="headerlink" title="轮播图要用ul 的li  每个li包含一个a链接的图片"></a>轮播图要用ul 的li  每个li包含一个a链接的图片</h4><h4 id="新建js文件夹-index-js"><a href="#新建js文件夹-index-js" class="headerlink" title="新建js文件夹: index.js"></a>新建js文件夹: index.js</h4><p>添加window事件 等网页加载完 才执行js</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;load&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>再index.html中引入index.js</p><p><code> &lt;script src=&quot;js/index.js&quot;&gt;&lt;/script&gt;</code></p><p>鼠标经过轮播图模块，左右按钮显示，离开隐藏左右按钮。</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.arrow-l</span>,</span><br><span class="line"><span class="selector-class">.arrow-r</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br></pre></td></tr></table></figure><p>④ 显示隐藏 display 按钮</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1.获取元素</span></span><br><span class="line"><span class="keyword">var</span> arrow_l = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.arrow-l&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> arrow_r = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.arrow-r&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> focus = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.focus&#x27;</span>);</span><br><span class="line"><span class="comment">//鼠标经过focus 就显示隐藏左右按钮</span></span><br><span class="line">focus.<span class="title function_">addEventListener</span>(<span class="string">&#x27;mouseenter&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    arrow_l.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;block&#x27;</span>;</span><br><span class="line">    arrow_r.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;block&#x27;</span>;</span><br><span class="line">&#125;)</span><br><span class="line">focus.<span class="title function_">addEventListener</span>(<span class="string">&#x27;mouseleave&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    arrow_l.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;none&#x27;</span>;</span><br><span class="line">    arrow_r.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;none&#x27;</span>;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="动态生成小圆圈"><a href="#动态生成小圆圈" class="headerlink" title="动态生成小圆圈"></a>动态生成小圆圈</h4><p>核心思路：小圆圈的个数要跟图片张数一致</p><p>③ 所以首先先得到ul里面图片的张数（图片放入li里面，所以就是li的个数）</p><p>④ 利用循环动态生成小圆圈（这个小圆圈要放入ol里面）</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//3.动态生成小圆圈  有几张图  我就生成几个小圆圈</span></span><br><span class="line"><span class="keyword">var</span> ul = focus.<span class="title function_">querySelector</span>(<span class="string">&#x27;ul&#x27;</span>);  <span class="comment">// 获取焦点图里面的ul</span></span><br><span class="line"><span class="keyword">var</span> ol = focus.<span class="title function_">querySelector</span>(<span class="string">&#x27;.circle&#x27;</span>);</span><br><span class="line"><span class="comment">// console.log(ul.children.length); //4  得到ul里面有4个li</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; ul.<span class="property">children</span>.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    <span class="comment">//创建一个li</span></span><br><span class="line">    <span class="keyword">var</span> li = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;li&#x27;</span>);</span><br><span class="line">    <span class="comment">//把li插入到ol里面</span></span><br><span class="line">    ol.<span class="title function_">appendChild</span>(li);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//把ol里面的li设置类名为current</span></span><br><span class="line">ol.<span class="property">children</span>[<span class="number">0</span>].<span class="property">className</span> = <span class="string">&#x27;current&#x27;</span>;</span><br></pre></td></tr></table></figure><p>⑤ 创建节点 createElement(‘li’)<br>⑥ 插入节点 ol. appendChild(li)<br>⑦ 第一个小圆圈需要添加 current 类</p><h4 id="多选一-小圆圈高亮"><a href="#多选一-小圆圈高亮" class="headerlink" title="多选一  小圆圈高亮"></a>多选一  小圆圈高亮</h4><p>① 小圆圈的排他思想<br>② 点击当前小圆圈，就添加current类</p><p>③ 其余的小圆圈就移除这个current类</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">ol.<span class="title function_">appendChild</span>(li);</span><br><span class="line"><span class="comment">//4.小圆圈的排他思想  我们可以直接再生成小圆圈的同时 绑定点击事件</span></span><br><span class="line">li.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="comment">//干掉所有人  把所有li清除current 类名</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;ol.<span class="property">children</span>.<span class="property">length</span>; i++) &#123;</span><br><span class="line">        ol.<span class="property">children</span>[i].<span class="property">className</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//留下我自己  当前li设置current 类名</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">className</span> = <span class="string">&#x27;current&#x27;</span>;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>④ 注意： 我们在刚才生成小圆圈的同时，就可以直接绑定这个点击事件了。</p><h4 id="点击小圆圈-滚动图片"><a href="#点击小圆圈-滚动图片" class="headerlink" title="点击小圆圈  滚动图片"></a>点击小圆圈  滚动图片</h4><p>② 此时用到animate动画函数，将js文件引入（注意，因为index.js 依赖 animate.js 所以，animate.js 要写到 index.js 上面）</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 这个animate.js 必须写到 index.js的上面引入 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/animate.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 引入我们首页的js文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/index.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>③ 使用动画函数的前提，该元素必须有定位</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.focus</span> <span class="selector-tag">ul</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">600%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>④ 注意是ul 移动 而不是小li </p><p>整个ul在动的时候  带着里面的一大串横向图片往左右移动  所以设置ul的left值  而不是设置li的值</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//留下我自己  当前li设置current 类名</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">className</span> = <span class="string">&#x27;current&#x27;</span>;</span><br><span class="line"><span class="comment">//5. 点击小圆圈 移动图片  当然移动的是ul</span></span><br><span class="line"><span class="comment">//ul的移动距离就是小圆圈的索引号*一张banner图片的宽度 注意是负值</span></span><br><span class="line"><span class="comment">//但我们点击了某个小li  就拿到当前li的索引号</span></span><br><span class="line"><span class="keyword">var</span> index = <span class="variable language_">this</span>.<span class="title function_">getAttribute</span>(<span class="string">&#x27;index&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> focusWidth = focus.<span class="property">offsetWidth</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(focusWidth); <span class="comment">//721</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(index); <span class="comment">// 0/1/2/3</span></span><br><span class="line"><span class="title function_">animate</span>(ul, -index * focusWidth);   <span class="comment">//向左走 是负值</span></span><br></pre></td></tr></table></figure><p>⑤ 滚动图片的核心算法： 点击某个小圆圈 ， 就让图片滚动 小圆圈的索引号乘以图片的宽度做为ul移动距离</p><p>⑥ 此时需要知道小圆圈的索引号， 我们可以在生成小圆圈的时候，给它设置一个自定义属性，点击的时候获取这个自定义属性即可。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> li = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;li&#x27;</span>);</span><br><span class="line"><span class="comment">// 记录当前小圆圈的索引号 通过自定义属性来做</span></span><br><span class="line">li.<span class="title function_">setAttribute</span>(<span class="string">&#x27;index&#x27;</span>, i); <span class="comment">//index是属性名 i是属性值</span></span><br></pre></td></tr></table></figure><h4 id="点击右侧按钮一次，就让图片滚动一张。"><a href="#点击右侧按钮一次，就让图片滚动一张。" class="headerlink" title="点击右侧按钮一次，就让图片滚动一张。"></a>点击右侧按钮一次，就让图片滚动一张。</h4><p><strong>② 声明一个变量num， 点击一次，自增1， 让这个变量乘以图片宽度，就是 ul 的滚动距离。</strong></p><blockquote><p>小箭头不见了</p><p>ul的就绝对定位挡住了小箭头</p><p>解决  index.css</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.arrow-l</span>,</span><br><span class="line"><span class="selector-class">.arrow-r</span> &#123;</span><br><span class="line">    ........</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>点击内容为a的链接 会返回页面顶端<br>这是不对的</p><p>解决: index.html</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 左侧按钮 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;arrow-l&quot;</span>&gt;</span></span><br><span class="line">    <span class="symbol">&amp;lt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 右侧按钮 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;arrow-r&quot;</span>&gt;</span> <span class="symbol">&amp;gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></blockquote><blockquote><p>将foucusWidth提到外面<br>这样我们的箭头点击事件才能利用这个变量<br>知道要移动多长(图片的宽度) </p><p><code>var focusWidth = focus.offsetWidth;</code></p></blockquote><blockquote><p>右侧轮播图按钮</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">ol.<span class="property">children</span>[<span class="number">0</span>].<span class="property">className</span> = <span class="string">&#x27;current&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//7. 点击右侧按钮, 图片滚动一张</span></span><br><span class="line"><span class="keyword">var</span> num = <span class="number">0</span>;</span><br><span class="line">arrow_r.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&#x27;1&#x27;</span>);</span><br><span class="line">    num++;</span><br><span class="line">    <span class="title function_">animate</span>(ul,- num *focusWidth)  <span class="comment">//还是负的 往左走</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>右侧到最后一张图 会是空白背景  需要无缝滚动原理</p></blockquote><p><strong>③ 图片无缝滚动原理</strong></p><blockquote><p>④ 把ul 第一个li 复制一份，放到ul 的最后面</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;upload/focus.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure></blockquote><blockquote><p>⑤ 当图片滚动到克隆的最后一张图片时， 让ul 快速的、不做动画的跳到最左侧： left 为0</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//7. 点击右侧按钮, 图片滚动一张</span></span><br><span class="line"><span class="keyword">var</span> num = <span class="number">0</span>;</span><br><span class="line">arrow_r.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">//如果走到了最后负值的一张图片, 此时我们ul要快速复原  left == 0;</span></span><br><span class="line">    <span class="keyword">if</span> (num == ul.<span class="property">children</span>.<span class="property">length</span> - <span class="number">1</span>) &#123; <span class="comment">// 等于ul图片的长度即li的个数减1  因为最后一个是重复第一张 不算ul的图片的长度</span></span><br><span class="line">        ul.<span class="property">style</span>.<span class="property">left</span> = <span class="number">0</span>;</span><br><span class="line">        num = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    num++;</span><br><span class="line">    <span class="title function_">animate</span>(ul, - num * focusWidth)  <span class="comment">//还是负的 往左走</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>⑥ 同时num 赋值为0，可以从新开始滚动图片了</p></blockquote><p><strong>自动赋值第一张图片的最后 小圆圈不会多</strong></p><blockquote><p>① 克隆第一张图片<br>② 克隆ul 第一个li cloneNode() 加true 深克隆 复制里面的子节点 &#x2F;&#x2F; false 浅克隆<br>③ 添加到 ul 最后面 appendChild<br>        &#x2F;&#x2F;6. 克隆第一张图片 放到ul最后面</p>   <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> first = ul.<span class="property">children</span>[<span class="number">0</span>].<span class="title function_">cloneNode</span>(<span class="literal">true</span>); <span class="comment">//第一个li深克隆一份</span></span><br><span class="line">    ul.<span class="title function_">appendChild</span>(first);</span><br></pre></td></tr></table></figure><p>小圆圈不会多的原因<br>    复制图片的执行顺序在 生成小圆圈的后面</p></blockquote><h4 id="点击右侧按钮-小圆圈也变化"><a href="#点击右侧按钮-小圆圈也变化" class="headerlink" title="点击右侧按钮, 小圆圈也变化"></a>点击右侧按钮, 小圆圈也变化</h4><p>② 最简单的做法是再声明一个变量circle，每次点击右侧按钮自增1，注意，左侧按钮也需要这个变量，因此要声明全局变量。</p><p>③ 但是图片有5张，我们小圆圈只有4个少一个，必须加一个判断条件</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title function_">animate</span>(ul, - num * focusWidth)  <span class="comment">//还是负的 往左走</span></span><br><span class="line"><span class="comment">//8. 点击右侧按钮  小圆圈一起变化  可以声明一个变量控制小圆圈的播放</span></span><br><span class="line">circle++;</span><br><span class="line"><span class="comment">//如果circle等于了4  说明走到最后我们克隆的这张图片了 我们就复原</span></span><br><span class="line"><span class="keyword">if</span> (circle == ol.<span class="property">children</span>.<span class="property">length</span>) &#123; <span class="comment">//如果走到了最后一个小圆点  就复原为第一个</span></span><br><span class="line">    circle = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//先清除其余小圆圈的current;</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; ol.<span class="property">children</span>.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    ol.<span class="property">children</span>[i].<span class="property">className</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//留下当前的小圆圈的current</span></span><br><span class="line">ol.<span class="property">children</span>[circle].<span class="property">className</span> = <span class="string">&#x27;current&#x27;</span>;</span><br></pre></td></tr></table></figure><p>④ 如果circle &#x3D;&#x3D; 4 就 从新复原为 0</p><h4 id="两个小bug"><a href="#两个小bug" class="headerlink" title="两个小bug"></a>两个小bug</h4><blockquote><p>点击小圆圈的第三个li  再点击右键轮播图按钮 会跳到第二张上去 而不是第四张</p></blockquote><p>原因是 我们的小圆圈点击之间 没有和右侧按钮点击绑定</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//当我们点击了某个li, 就要把我们的索引号给num</span></span><br><span class="line">num = index;</span><br><span class="line"><span class="comment">//当我们点击了某个li, 就要把我们的索引号给circle</span></span><br><span class="line">circle = index;</span><br></pre></td></tr></table></figure><p>注意  里面的图片 要与.focus这个盒子的宽度一致, 不然会有缝隙. 因为图片移动的宽度 是根据.focus获取的</p><h4 id="左侧按钮功能制作"><a href="#左侧按钮功能制作" class="headerlink" title="左侧按钮功能制作"></a>左侧按钮功能制作</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">arrow_l.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">//如果走到了最后负值的一张图片, 此时我们ul要快速复原  left == 0;</span></span><br><span class="line">        <span class="keyword">if</span> (num == <span class="number">0</span>) &#123; <span class="comment">// 等于ul图片的长度即li的个数减1  因为最后一个是重复第一张 不算ul的图片的长度</span></span><br><span class="line">            num = ul.<span class="property">children</span>.<span class="property">length</span> -<span class="number">1</span>;</span><br><span class="line">            ul.<span class="property">style</span>.<span class="property">left</span> = -num*focusWidth +<span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        num--;</span><br><span class="line">        <span class="title function_">animate</span>(ul, - num * focusWidth)  <span class="comment">//还是负的 往左走</span></span><br><span class="line">        <span class="comment">//8. 点击右侧按钮  小圆圈一起变化  可以声明一个变量控制小圆圈的播放</span></span><br><span class="line">        circle--;</span><br><span class="line">        <span class="comment">//如果circle&lt;0  说明第一章图片, 则小圆圈要改为第四个小圆圈</span></span><br><span class="line">        <span class="keyword">if</span> (circle &lt;<span class="number">0</span>) &#123;</span><br><span class="line">            circle = ol.<span class="property">children</span>.<span class="property">length</span>-<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//先清除其余小圆圈的current;</span></span><br><span class="line">        <span class="title function_">circleChange</span>()</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">circleChange</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; ol.<span class="property">children</span>.<span class="property">length</span>; i++) &#123;</span><br><span class="line">            ol.<span class="property">children</span>[i].<span class="property">className</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//留下当前的小圆圈的current</span></span><br><span class="line">        ol.<span class="property">children</span>[circle].<span class="property">className</span> = <span class="string">&#x27;current&#x27;</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="自动播放功能"><a href="#自动播放功能" class="headerlink" title="自动播放功能"></a>自动播放功能</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//10. 自动播放轮播图</span></span><br><span class="line"><span class="keyword">var</span> timer = <span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">//手动调用点击事件</span></span><br><span class="line">    arrow_r.<span class="title function_">click</span>();</span><br><span class="line">&#125;, <span class="number">2000</span>)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//鼠标经过focus 就显示隐藏左右按钮</span></span><br><span class="line">focus.<span class="title function_">addEventListener</span>(<span class="string">&#x27;mouseenter&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    arrow_l.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;block&#x27;</span>;</span><br><span class="line">    arrow_r.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;block&#x27;</span>;</span><br><span class="line">    <span class="built_in">clearInterval</span>(timer);</span><br><span class="line">    timer = <span class="literal">null</span>;  <span class="comment">//清除定时器变量</span></span><br><span class="line">&#125;)</span><br><span class="line">focus.<span class="title function_">addEventListener</span>(<span class="string">&#x27;mouseleave&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    arrow_l.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;none&#x27;</span>;</span><br><span class="line">    arrow_r.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;none&#x27;</span>;</span><br><span class="line">    timer = <span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">//手动调用点击事件</span></span><br><span class="line">        arrow_r.<span class="title function_">click</span>();</span><br><span class="line">    &#125;, <span class="number">2000</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="节流阀"><a href="#节流阀" class="headerlink" title="节流阀"></a>节流阀</h3><p>防止轮播图按钮连续点击造成播放过快。</p><p>节流阀目的：当上一个函数动画内容执行完毕，再去执行下一个函数动画，让事件无法连续触发。</p><p>核心实现思路：利用回调函数，添加一个变量来控制，锁住函数和解锁函数。</p><p>开始设置一个变量 var flag &#x3D; true;<br>If(flag) {flag &#x3D; false; do something} 关闭水龙头<br>利用回调函数 动画执行完毕， flag &#x3D; true 打开水龙头</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">            <span class="comment">// if (callback) &#123;</span></span><br><span class="line">            <span class="comment">//     // 调用函数</span></span><br><span class="line">            <span class="comment">//     callback();</span></span><br><span class="line">            <span class="comment">// &#125;</span></span><br><span class="line">            callback &amp;&amp; <span class="title function_">callback</span>();  </span><br><span class="line"><span class="comment">// 短路运算符  如果callback有  则执行callback() //如果callback没有, 则略过这一行后面的内容</span></span><br></pre></td></tr></table></figure><h2 id="返回顶部"><a href="#返回顶部" class="headerlink" title="返回顶部"></a>返回顶部</h2><h3 id="滚动窗口至文档中的特定位置"><a href="#滚动窗口至文档中的特定位置" class="headerlink" title="滚动窗口至文档中的特定位置"></a>滚动窗口至文档中的特定位置</h3><p><code>window.scroll(x,y)</code></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//3.当点击了返回顶部  就让窗口滚动到页面的最上方</span></span><br><span class="line">goBack.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="comment">//里面的x,y不跟单位  直接写数字即可</span></span><br><span class="line">    <span class="variable language_">window</span>.<span class="title function_">scroll</span>(<span class="number">0</span>,<span class="number">0</span>);  <span class="comment">// </span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="带有动画的返回顶部"><a href="#带有动画的返回顶部" class="headerlink" title="带有动画的返回顶部"></a>带有动画的返回顶部</h3><p>此时可以继续使用我们封装的动画函数</p><p>③ 只需要把所有的left 相关的值 改为 跟 页面垂直滚动距离相关就可以了<br>④ 页面滚动了多少，可以通过 window.pageYOffset 得到<br>⑤ 最后是页面滚动，使用 window.scroll(x,y) </p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">     <span class="keyword">function</span> <span class="title function_">animate</span>(<span class="params">obj, target, callback</span>) &#123;</span><br><span class="line">         <span class="comment">// console.log(callback); //callback = function () &#123;&#125; 调用的时候 callback()</span></span><br><span class="line">         <span class="built_in">clearInterval</span>(obj.<span class="property">timer</span>);</span><br><span class="line">         obj.<span class="property">timer</span> = <span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">             <span class="keyword">var</span> step = (target - <span class="variable language_">window</span>.<span class="property">pageYOffset</span>) / <span class="number">10</span></span><br><span class="line">             step = step &gt; <span class="number">0</span> ? <span class="title class_">Math</span>.<span class="title function_">ceil</span>(step) : <span class="title class_">Math</span>.<span class="title function_">floor</span>(step)</span><br><span class="line">             <span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">pageYOffset</span> == target) &#123;</span><br><span class="line">                 <span class="built_in">clearInterval</span>(obj.<span class="property">timer</span>);</span><br><span class="line">                 <span class="keyword">if</span> (callback) &#123;</span><br><span class="line">                     <span class="title function_">callback</span>();</span><br><span class="line">                 &#125;</span><br><span class="line">             &#125;</span><br><span class="line">             <span class="comment">// obj.style.left = window.pageYoffset + step + &#x27;px&#x27;;</span></span><br><span class="line">             <span class="variable language_">window</span>.<span class="title function_">scroll</span>(<span class="number">0</span>, <span class="variable language_">window</span>.<span class="property">pageYOffset</span> + step);</span><br><span class="line">         &#125;, <span class="number">15</span>)</span><br><span class="line">     &#125;</span><br><span class="line"><span class="title function_">animate</span>(<span class="variable language_">window</span>, <span class="number">0</span>)</span><br></pre></td></tr></table></figure><h2 id="筋斗云案例"><a href="#筋斗云案例" class="headerlink" title="筋斗云案例"></a>筋斗云案例</h2><p>需求</p><p>鼠标经过某个小li， 筋斗云跟这到当前小li位置<br>鼠标离开这个小li， 筋斗云复原为原来的位置<br>鼠标点击了某个小li， 筋斗云就会留在点击这个小li 的位置</p><p>分析</p><p>① 利用动画函数做动画效果<br>② 原先筋斗云的起始位置是0<br>③ 鼠标经过某个小li， 把当前小li 的 offsetLeft 位置 做为目标值即可<br>④ 鼠标离开某个小li， 就把目标值设为 0<br>⑤ 如果点击了某个小li， 就把li当前的位置存储起来，做为筋斗云的起始位置</p>]]></content>
    
    
    <summary type="html">针对浏览器的一些属性和方法 获取元素相对于浏览器的一些属性, 浏览器的滚动属性或事件 制作JS动画</summary>
    
    
    
    <category term="JavaScript" scheme="http://l1562007999.github.io/categories/JavaScript/"/>
    
    
    <category term="JS" scheme="http://l1562007999.github.io/tags/JS/"/>
    
    <category term="学习" scheme="http://l1562007999.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="PC网页特效" scheme="http://l1562007999.github.io/tags/PC%E7%BD%91%E9%A1%B5%E7%89%B9%E6%95%88/"/>
    
  </entry>
  
  <entry>
    <title>在vscode中,nrm无法运行</title>
    <link href="http://l1562007999.github.io/2022/04/04/%E5%9C%A8vscode%E4%B8%AD-nrm%E6%97%A0%E6%B3%95%E8%BF%90%E8%A1%8C/"/>
    <id>http://l1562007999.github.io/2022/04/04/%E5%9C%A8vscode%E4%B8%AD-nrm%E6%97%A0%E6%B3%95%E8%BF%90%E8%A1%8C/</id>
    <published>2022-04-04T01:20:56.000Z</published>
    <updated>2022-04-08T13:52:25.843Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>nrm : 无法加载文件 C:\Users\xxx\AppData\Roaming\npm\nrm.ps1，因为在此系统上禁止运行脚本。有关详细信息，请参阅 https:&#x2F;go.<br>microsoft.com&#x2F;fwlink&#x2F;?LinkID&#x3D;135170 中的 about_Execution_Policies。<br>所在位置 行:1 字符: 1</p><h2 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h2><p><strong>打开Windows PowerShell（管理员）</strong></p><p>输入<code>set-ExecutionPolicy RemoteSigned</code></p><p>在输入Y</p><p>即可~~~</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;nrm : 无法加载文件 C:\Users\xxx\AppData\Roaming\npm\nrm.ps1，因为在此系统上禁止运行脚本。有关</summary>
      
    
    
    
    <category term="Node.js" scheme="http://l1562007999.github.io/categories/Node-js/"/>
    
    
    <category term="解决问题" scheme="http://l1562007999.github.io/tags/%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98/"/>
    
    <category term="Node.js" scheme="http://l1562007999.github.io/tags/Node-js/"/>
    
  </entry>
  
</feed>
